/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_VCSEC_VCSECV4_20_69_PB_H_INCLUDED
#define PB_VCSEC_VCSECV4_20_69_PB_H_INCLUDED
#include "pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _VCSEC_Activity_E {
    VCSEC_Activity_E_ACTIVITY_NONE = 0,
    VCSEC_Activity_E_ACTIVITY_STATIONARY = 1,
    VCSEC_Activity_E_ACTIVITY_MOTION = 2,
    VCSEC_Activity_E_ACTIVITY_SIGNIFICANT_MOTION = 3
} VCSEC_Activity_E;

typedef enum _VCSEC_AppDeviceInfoRequest_E {
    VCSEC_AppDeviceInfoRequest_E_APP_DEVICE_INFO_REQUEST_NONE = 0,
    VCSEC_AppDeviceInfoRequest_E_APP_DEVICE_INFO_REQUEST_GET_MODEL_NUMBER = 1
} VCSEC_AppDeviceInfoRequest_E;

typedef enum _VCSEC_AppOperatingSystem {
    VCSEC_AppOperatingSystem_UNKNOWN = 0,
    VCSEC_AppOperatingSystem_ANDROID = 1,
    VCSEC_AppOperatingSystem_IOS = 2
} VCSEC_AppOperatingSystem;

typedef enum _VCSEC_AuthenticationLevel_E {
    VCSEC_AuthenticationLevel_E_AUTHENTICATION_LEVEL_NONE = 0,
    VCSEC_AuthenticationLevel_E_AUTHENTICATION_LEVEL_UNLOCK = 1,
    VCSEC_AuthenticationLevel_E_AUTHENTICATION_LEVEL_DRIVE = 2
} VCSEC_AuthenticationLevel_E;

typedef enum _VCSEC_AuthenticationReason_E {
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_NOT_DOCUMENTED = 0,
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_IDENTIFICATION = 1,
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_POWER_ON_VEHICLE_REQUEST = 2,
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_GTW_REQUEST = 3,
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_UI_UNLOCK_PASSIVE_AUTH = 4,
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_PASSIVE_UNLOCK_EXTERIOR_HANDLE_PULL = 5,
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_PASSIVE_UNLOCK_INTERIOR_HANDLE_PULL = 6,
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_PASSIVE_UNLOCK_AUTOPRESENT_DOOR = 7,
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_ENTERED_HIGHER_AUTH_ZONE = 8,
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_WALK_UP_UNLOCK = 9,
    VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_IMMOBILIZER = 10
} VCSEC_AuthenticationReason_E;

typedef enum _VCSEC_AuthenticationRejection_E {
    VCSEC_AuthenticationRejection_E_AUTHENTICATIONREJECTION_NONE = 0,
    VCSEC_AuthenticationRejection_E_AUTHENTICATIONREJECTION_DEVICE_STATIONARY = 1,
    VCSEC_AuthenticationRejection_E_AUTHENTICATIONREJECTION_PASSIVE_DISABLED = 2,
    VCSEC_AuthenticationRejection_E_AUTHENTICATIONREJECTION_NO_TOKEN = 3
} VCSEC_AuthenticationRejection_E;

typedef enum _VCSEC_BLEAdditionalTRIMApplied_E {
    VCSEC_BLEAdditionalTRIMApplied_E_BLE_ADDITIONAL_TRIM_APPLIED_NONE = 0,
    VCSEC_BLEAdditionalTRIMApplied_E_BLE_ADDITIONAL_TRIM_APPLIED_APPLIED = 1,
    VCSEC_BLEAdditionalTRIMApplied_E_BLE_ADDITIONAL_TRIM_APPLIED_NOT_APPLIED = 2
} VCSEC_BLEAdditionalTRIMApplied_E;

typedef enum _VCSEC_BLEConfigCommandType_E {
    VCSEC_BLEConfigCommandType_E_BLE_CONFIG_COMMAND_TYPE_NONE = 0,
    VCSEC_BLEConfigCommandType_E_BLE_CONFIG_COMMAND_TYPE_READ = 1,
    VCSEC_BLEConfigCommandType_E_BLE_CONFIG_COMMAND_TYPE_WRITE = 2
} VCSEC_BLEConfigCommandType_E;

typedef enum _VCSEC_BLEPresence {
    VCSEC_BLEPresence_BLE_PRESENCE_NOT_PRESENT = 0,
    VCSEC_BLEPresence_BLE_PRESENCE_PRESENT = 1
} VCSEC_BLEPresence;

typedef enum _VCSEC_ClosureMoveType_E {
    VCSEC_ClosureMoveType_E_CLOSURE_MOVE_TYPE_NONE = 0,
    VCSEC_ClosureMoveType_E_CLOSURE_MOVE_TYPE_MOVE = 1,
    VCSEC_ClosureMoveType_E_CLOSURE_MOVE_TYPE_STOP = 2,
    VCSEC_ClosureMoveType_E_CLOSURE_MOVE_TYPE_OPEN = 3,
    VCSEC_ClosureMoveType_E_CLOSURE_MOVE_TYPE_CLOSE = 4
} VCSEC_ClosureMoveType_E;

typedef enum _VCSEC_ClosureState_E {
    VCSEC_ClosureState_E_CLOSURESTATE_CLOSED = 0,
    VCSEC_ClosureState_E_CLOSURESTATE_OPEN = 1,
    VCSEC_ClosureState_E_CLOSURESTATE_AJAR = 2,
    VCSEC_ClosureState_E_CLOSURESTATE_UNKNOWN = 3,
    VCSEC_ClosureState_E_CLOSURESTATE_FAILED_UNLATCH = 4
} VCSEC_ClosureState_E;

typedef enum _VCSEC_Device_Motion_Confidence {
    VCSEC_Device_Motion_Confidence_DEVICE_MOTION_CONFIDENCE_UNKNOWN = 0,
    VCSEC_Device_Motion_Confidence_DEVICE_MOTION_CONFIDENCE_LOW = 1,
    VCSEC_Device_Motion_Confidence_DEVICE_MOTION_CONFIDENCE_MEDIUM = 2,
    VCSEC_Device_Motion_Confidence_DEVICE_MOTION_CONFIDENCE_HIGH = 3
} VCSEC_Device_Motion_Confidence;

typedef enum _VCSEC_Device_Motion_State {
    VCSEC_Device_Motion_State_DEVICE_MOTION_UNKNOWN = 0,
    VCSEC_Device_Motion_State_DEVICE_MOTION_STATIONARY = 1,
    VCSEC_Device_Motion_State_DEVICE_MOTION_WALKING = 2,
    VCSEC_Device_Motion_State_DEVICE_MOTION_RUNNING = 3,
    VCSEC_Device_Motion_State_DEVICE_MOTION_AUTOMOTIVE = 4,
    VCSEC_Device_Motion_State_DEVICE_MOTION_CYCLING = 5
} VCSEC_Device_Motion_State;

typedef enum _VCSEC_GenealogyRequest_E {
    VCSEC_GenealogyRequest_E_GENEALOGYREQUEST_NONE = 0,
    VCSEC_GenealogyRequest_E_GENEALOGYREQUEST_READ = 1,
    VCSEC_GenealogyRequest_E_GENEALOGYREQUEST_KEYFOBINFO_READ = 2,
    VCSEC_GenealogyRequest_E_GENEALOGYREQUEST_TPWHEELUNITINFO_READ = 3
} VCSEC_GenealogyRequest_E;

typedef enum _VCSEC_GenealogyStatus_E {
    VCSEC_GenealogyStatus_E_GENEALOGY_STATUS_NONE = 0,
    VCSEC_GenealogyStatus_E_GENEALOGY_STATUS_NOT_WRITTEN = 1,
    VCSEC_GenealogyStatus_E_GENEALOGY_STATUS_WRITE_SUCCESS = 2,
    VCSEC_GenealogyStatus_E_GENEALOGY_STATUS_WRITE_FAILURE = 3,
    VCSEC_GenealogyStatus_E_GENEALOGY_STATUS_READ_SUCCESS = 4,
    VCSEC_GenealogyStatus_E_GENEALOGY_STATUS_READ_FAILURE = 5,
    VCSEC_GenealogyStatus_E_GENEALOGY_STATUS_CRC_FAILURE = 6
} VCSEC_GenealogyStatus_E;

typedef enum _VCSEC_GenericError_E {
    VCSEC_GenericError_E_GENERICERROR_NONE = 0,
    VCSEC_GenericError_E_GENERICERROR_UNKNOWN = 1,
    VCSEC_GenericError_E_GENERICERROR_CLOSURES_OPEN = 2,
    VCSEC_GenericError_E_GENERICERROR_ALREADY_ON = 3,
    VCSEC_GenericError_E_GENERICERROR_DISABLED_FOR_USER_COMMAND = 4,
    VCSEC_GenericError_E_GENERICERROR_VEHICLE_NOT_IN_PARK = 5,
    VCSEC_GenericError_E_GENERICERROR_UNAUTHORIZED = 6,
    VCSEC_GenericError_E_GENERICERROR_NOT_ALLOWED_OVER_TRANSPORT = 7
} VCSEC_GenericError_E;

typedef enum _VCSEC_GetReaderKeyCommand {
    VCSEC_GetReaderKeyCommand_GET_READER_KEY_COMMAND_UNKNOWN = 0,
    VCSEC_GetReaderKeyCommand_GET_READER_KEY_COMMAND_START_LOOKING = 1,
    VCSEC_GetReaderKeyCommand_GET_READER_KEY_COMMAND_STOP_LOOKING = 2
} VCSEC_GetReaderKeyCommand;

typedef enum _VCSEC_HandlePulled_E {
    VCSEC_HandlePulled_E_HANDLE_PULLED_FRONT_DRIVER_DOOR = 0,
    VCSEC_HandlePulled_E_HANDLE_PULLED_FRONT_PASSENGER_DOOR = 1,
    VCSEC_HandlePulled_E_HANDLE_PULLED_REAR_DRIVER_DOOR = 2,
    VCSEC_HandlePulled_E_HANDLE_PULLED_REAR_PASSENGER_DOOR = 3,
    VCSEC_HandlePulled_E_HANDLE_PULLED_TRUNK = 4,
    VCSEC_HandlePulled_E_HANDLE_PULLED_CHARGE_PORT = 5,
    VCSEC_HandlePulled_E_HANDLE_PULLED_FRONT_DRIVER_AUTO_PRESENT_DOOR = 6,
    VCSEC_HandlePulled_E_HANDLE_PULLED_FRONT_PASSENGER_AUTO_PRESENT_DOOR = 7,
    VCSEC_HandlePulled_E_HANDLE_PULLED_OTHER = 8
} VCSEC_HandlePulled_E;

typedef enum _VCSEC_IMURequest_E {
    VCSEC_IMURequest_E_IMU_REQUEST_NONE = 0,
    VCSEC_IMURequest_E_IMU_REQUEST_GET_SLEEP_STATE = 1,
    VCSEC_IMURequest_E_IMU_REQUEST_ENABLE_CONTINUOUS_ACTIVITY_UPDATE = 2,
    VCSEC_IMURequest_E_IMU_REQUEST_DISABLE_CONTINUOUS_ACTIVITY_UPDATE = 3
} VCSEC_IMURequest_E;

typedef enum _VCSEC_IMUState_E {
    VCSEC_IMUState_E_IMU_STATE_NOT_CONFIGURED = 0,
    VCSEC_IMUState_E_IMU_STATE_ACTIVITY = 1,
    VCSEC_IMUState_E_IMU_STATE_INACTIVITY = 2
} VCSEC_IMUState_E;

typedef enum _VCSEC_InformationRequestType {
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_STATUS = 0,
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_TOKEN = 1,
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_COUNTER = 2,
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_EPHEMERAL_PUBLIC_KEY = 3,
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_SESSION_DATA = 4,
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_WHITELIST_INFO = 5,
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_WHITELIST_ENTRY_INFO = 6,
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_VEHICLE_INFO = 7,
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_KEYSTATUS_INFO = 8,
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_ACTIVE_KEY = 9,
    VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_CAPABILITIES = 16
} VCSEC_InformationRequestType;

typedef enum _VCSEC_KeyFormFactor {
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_UNKNOWN = 0,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_NFC_CARD = 1,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_3_BUTTON_BLE_CAR_KEYFOB = 2,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_BLE_DEVICE = 3,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_NFC_DEVICE = 4,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_BLE_AND_NFC_DEVICE = 5,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_IOS_DEVICE = 6,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_ANDROID_DEVICE = 7,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_3_BUTTON_BLE_CAR_KEYFOB_P60 = 8,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_CLOUD_KEY = 9,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_3_BUTTON_GEN2_CAR_KEYFOB_P60 = 10,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_5_BUTTON_GEN2_CAR_KEYFOB_P60 = 11,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_3_BUTTON_GEN2_CAR_KEYFOB_P60_V2 = 12,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_3_BUTTON_GEN2_CAR_KEYFOB_P60_V3 = 13,
    VCSEC_KeyFormFactor_KEY_FORM_FACTOR_NFC_CARD_P71 = 14
} VCSEC_KeyFormFactor;

typedef enum _VCSEC_LRDetectionResult_E {
    VCSEC_LRDetectionResult_E_LRDETECTIONRESULT_ERROR_MAXCNT = 0,
    VCSEC_LRDetectionResult_E_LRDETECTIONRESULT_ERROR_NEGPERIOD = 1,
    VCSEC_LRDetectionResult_E_LRDETECTIONRESULT_ERROR_LONGPERIOD = 2,
    VCSEC_LRDetectionResult_E_LRDETECTIONRESULT_LEFT = 3,
    VCSEC_LRDetectionResult_E_LRDETECTIONRESULT_RIGHT = 4
} VCSEC_LRDetectionResult_E;

typedef enum _VCSEC_MIError_E {
    VCSEC_MIError_E_ERROR_UNKNOWN = 0,
    VCSEC_MIError_E_ERROR_SESSION_LIMIT_EXCEEDED = 1,
    VCSEC_MIError_E_ERROR_INVALID_CONFIGURATION = 2,
    VCSEC_MIError_E_ERROR_RESOURCE_USAGE_TIMEOUT = 3,
    VCSEC_MIError_E_ERROR_SESSION_FAILED = 4,
    VCSEC_MIError_E_ERROR_UNSUPPORTED_PLATFORM = 5,
    VCSEC_MIError_E_ERROR_USER_DID_NOT_ALLOW = 6,
    VCSEC_MIError_E_ERROR_BLE_PEER_UNAVAILABLE = 7
} VCSEC_MIError_E;

typedef enum _VCSEC_MLXWakePeriod_E {
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_2_MS = 0,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_3_MS = 1,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_5_MS = 2,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_15_MS = 3,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_30_MS = 4,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_50_MS = 5,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_100_MS = 6,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_150_MS = 7,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_250_MS = 8,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_500_MS = 9,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_1_S = 10,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_2_S = 11,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_2_5_S = 12,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_3_S = 13,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_4_S = 14,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_5_S = 15,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_6_S = 16,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_7_S = 17,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_8_S = 18,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_9_S = 19,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_10_S = 20,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_11_S = 21,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_12_S = 22,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_15_S = 23,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_20_S = 24,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_30_S = 25,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_1_M = 26,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_2_M = 27,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_3_M = 28,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_4_M = 29,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_5_M = 30,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_10_M = 31,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_16_M = 32,
    VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_NOT_SET = 33
} VCSEC_MLXWakePeriod_E;

typedef enum _VCSEC_NFCPresence {
    VCSEC_NFCPresence_NFC_PRESENCE_NOT_PRESENT = 0,
    VCSEC_NFCPresence_NFC_PRESENCE_PRESENT_AT_B_PILLAR = 1,
    VCSEC_NFCPresence_NFC_PRESENCE_PRESENT_AT_CENTER_CONSOLE = 2
} VCSEC_NFCPresence;

typedef enum _VCSEC_NFCSEDevicePubKeyState_E {
    VCSEC_NFCSEDevicePubKeyState_E_NFCSEC_DEVICEPUBKEY_STATE_NONE = 0,
    VCSEC_NFCSEDevicePubKeyState_E_NFCSEC_DEVICEPUBKEY_STATE_RETRIEVED = 1,
    VCSEC_NFCSEDevicePubKeyState_E_NFCSEC_DEVICEPUBKEY_STATE_NOT_RETRIEVED = 2
} VCSEC_NFCSEDevicePubKeyState_E;

typedef enum _VCSEC_NFCSEInsecureCommandState_E {
    VCSEC_NFCSEInsecureCommandState_E_NFCSEC_INSECURE_COMMAND_STATE_NONE = 0,
    VCSEC_NFCSEInsecureCommandState_E_NFCSEC_INSECURE_COMMAND_STATE_ENABLED = 1,
    VCSEC_NFCSEInsecureCommandState_E_NFCSEC_INSECURE_COMMAND_STATE_DISABLED = 2
} VCSEC_NFCSEInsecureCommandState_E;

typedef enum _VCSEC_NFCSERequest_E {
    VCSEC_NFCSERequest_E_NFCSE_REQUEST_NONE = 0,
    VCSEC_NFCSERequest_E_NFCSE_REQUEST_REFETCH_SESSION_INFO = 1,
    VCSEC_NFCSERequest_E_NFCSE_REQUEST_DISABLE_INSECURE_COMMANDS = 2,
    VCSEC_NFCSERequest_E_NFCSE_REQUEST_GET_CURRENT_STATE = 3
} VCSEC_NFCSERequest_E;

typedef enum _VCSEC_NFCSESharedSecretState_E {
    VCSEC_NFCSESharedSecretState_E_NFCSEC_SHAREDSECRET_STATE_NONE = 0,
    VCSEC_NFCSESharedSecretState_E_NFCSEC_SHAREDSECRET_STATE_GENERATED = 1,
    VCSEC_NFCSESharedSecretState_E_NFCSEC_SHAREDSECRET_STATE_NOT_GENERATED = 2
} VCSEC_NFCSESharedSecretState_E;

typedef enum _VCSEC_NFCSEVehiclePubKeyState_E {
    VCSEC_NFCSEVehiclePubKeyState_E_NFCSEC_VEHICLEPUBKEY_STATE_NONE = 0,
    VCSEC_NFCSEVehiclePubKeyState_E_NFCSEC_VEHICLEPUBKEY_STATE_RETRIEVED = 1,
    VCSEC_NFCSEVehiclePubKeyState_E_NFCSEC_VEHICLEPUBKEY_STATE_NOT_RETRIEVED = 2
} VCSEC_NFCSEVehiclePubKeyState_E;

typedef enum _VCSEC_OperationStatus_E {
    VCSEC_OperationStatus_E_OPERATIONSTATUS_OK = 0,
    VCSEC_OperationStatus_E_OPERATIONSTATUS_WAIT = 1,
    VCSEC_OperationStatus_E_OPERATIONSTATUS_ERROR = 2
} VCSEC_OperationStatus_E;

typedef enum _VCSEC_RCI_control_E {
    VCSEC_RCI_control_E_RCI_CONTROL_NONE = 0,
    VCSEC_RCI_control_E_RCI_CONTROL_TURN_OFF = 1
} VCSEC_RCI_control_E;

typedef enum _VCSEC_ResetTrackerCommand_E {
    VCSEC_ResetTrackerCommand_E_RESETTRACKER_COMMAND_NONE = 0,
    VCSEC_ResetTrackerCommand_E_RESETTRACKER_COMMAND_GET_STATS = 1,
    VCSEC_ResetTrackerCommand_E_RESETTRACKER_COMMAND_CLEAR_STATS = 2
} VCSEC_ResetTrackerCommand_E;

typedef enum _VCSEC_RKEAction_E {
    VCSEC_RKEAction_E_RKE_ACTION_UNLOCK = 0,
    VCSEC_RKEAction_E_RKE_ACTION_LOCK = 1,
    VCSEC_RKEAction_E_RKE_ACTION_OPEN_TRUNK = 2,
    VCSEC_RKEAction_E_RKE_ACTION_OPEN_FRUNK = 3,
    VCSEC_RKEAction_E_RKE_ACTION_OPEN_CHARGE_PORT = 4,
    VCSEC_RKEAction_E_RKE_ACTION_CLOSE_CHARGE_PORT = 5,
    VCSEC_RKEAction_E_RKE_ACTION_CANCEL_EXTERNAL_AUTHENTICATE = 6,
    VCSEC_RKEAction_E_RKE_ACTION_SINGLE_PRESS_TOP = 7,
    VCSEC_RKEAction_E_RKE_ACTION_DOUBLE_PRESS_TOP = 8,
    VCSEC_RKEAction_E_RKE_ACTION_TRIPLE_PRESS_TOP = 9,
    VCSEC_RKEAction_E_RKE_ACTION_HOLD_TOP = 10,
    VCSEC_RKEAction_E_RKE_ACTION_SINGLE_PRESS_BACK = 11,
    VCSEC_RKEAction_E_RKE_ACTION_DOUBLE_PRESS_BACK = 12,
    VCSEC_RKEAction_E_RKE_ACTION_TRIPLE_PRESS_BACK = 13,
    VCSEC_RKEAction_E_RKE_ACTION_HOLD_BACK = 14,
    VCSEC_RKEAction_E_RKE_ACTION_SINGLE_PRESS_FRONT = 15,
    VCSEC_RKEAction_E_RKE_ACTION_DOUBLE_PRESS_FRONT = 16,
    VCSEC_RKEAction_E_RKE_ACTION_TRIPLE_PRESS_FRONT = 17,
    VCSEC_RKEAction_E_RKE_ACTION_HOLD_FRONT = 18,
    VCSEC_RKEAction_E_RKE_ACTION_UNKNOWN = 19,
    VCSEC_RKEAction_E_RKE_ACTION_REMOTE_DRIVE = 20,
    VCSEC_RKEAction_E_RKE_ACTION_SINGLE_PRESS_LEFT = 21,
    VCSEC_RKEAction_E_RKE_ACTION_DOUBLE_PRESS_LEFT = 22,
    VCSEC_RKEAction_E_RKE_ACTION_TRIPLE_PRESS_LEFT = 23,
    VCSEC_RKEAction_E_RKE_ACTION_HOLD_LEFT = 24,
    VCSEC_RKEAction_E_RKE_ACTION_SINGLE_PRESS_RIGHT = 25,
    VCSEC_RKEAction_E_RKE_ACTION_DOUBLE_PRESS_RIGHT = 26,
    VCSEC_RKEAction_E_RKE_ACTION_TRIPLE_PRESS_RIGHT = 27,
    VCSEC_RKEAction_E_RKE_ACTION_HOLD_RIGHT = 28,
    VCSEC_RKEAction_E_RKE_ACTION_AUTO_SECURE_VEHICLE = 29,
    VCSEC_RKEAction_E_RKE_ACTION_WAKE_VEHICLE = 30
} VCSEC_RKEAction_E;

typedef enum _VCSEC_Role {
    VCSEC_Role_ROLE_NONE = 0,
    VCSEC_Role_ROLE_SERVICE = 1,
    VCSEC_Role_ROLE_OWNER = 2,
    VCSEC_Role_ROLE_DRIVER = 3,
    VCSEC_Role_ROLE_FM = 4,
    VCSEC_Role_ROLE_VEHICLE_MONITOR = 5,
    VCSEC_Role_ROLE_CHARGING_MANAGER = 6,
    VCSEC_Role_ROLE_SERVICE_TECH = 7
} VCSEC_Role;

typedef enum _VCSEC_Session_Info_Status {
    VCSEC_Session_Info_Status_SESSION_INFO_STATUS_OK = 0,
    VCSEC_Session_Info_Status_SESSION_INFO_STATUS_KEY_NOT_ON_WHITELIST = 1
} VCSEC_Session_Info_Status;

typedef enum _VCSEC_SignatureType {
    VCSEC_SignatureType_SIGNATURE_TYPE_AES_GCM = 0,
    VCSEC_SignatureType_SIGNATURE_TYPE_ECDSA = 1,
    VCSEC_SignatureType_SIGNATURE_TYPE_PRESENT_KEY = 2,
    VCSEC_SignatureType_SIGNATURE_TYPE_AES_GCM_TOKEN = 3,
    VCSEC_SignatureType_SIGNATURE_TYPE_UNSIGNED = 4
} VCSEC_SignatureType;

typedef enum _VCSEC_SignedMessage_information_E {
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_NONE = 0,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_UNKNOWN = 1,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_NOT_ON_WHITELIST = 2,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_IV_SMALLER_THAN_EXPECTED = 3,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_INVALID_TOKEN = 4,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_TOKEN_AND_COUNTER_INVALID = 5,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_AES_DECRYPT_AUTH = 6,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_ECDSA_INPUT = 7,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_ECDSA_SIGNATURE = 8,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_LOCAL_ENTITY_START = 9,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_LOCAL_ENTITY_RESULT = 10,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_COULD_NOT_RETRIEVE_KEY = 11,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_COULD_NOT_RETRIEVE_TOKEN = 12,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_SIGNATURE_TOO_SHORT = 13,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_TOKEN_IS_INCORRECT_LENGTH = 14,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_INCORRECT_EPOCH = 15,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_IV_INCORRECT_LENGTH = 16,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_TIME_EXPIRED = 17,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_NOT_PROVISIONED_WITH_IDENTITY = 18,
    VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_COULD_NOT_HASH_METADATA = 19
} VCSEC_SignedMessage_information_E;

typedef enum _VCSEC_SleepManagerCommand_E {
    VCSEC_SleepManagerCommand_E_SLEEPMANAGER_COMMAND_NONE = 0,
    VCSEC_SleepManagerCommand_E_SLEEPMANAGER_GET_STATS = 1,
    VCSEC_SleepManagerCommand_E_SLEEPMANAGER_RESET_STATS = 2
} VCSEC_SleepManagerCommand_E;

typedef enum _VCSEC_TPDataRequest_E {
    VCSEC_TPDataRequest_E_TP_DATAREQUEST_NONE = 0,
    VCSEC_TPDataRequest_E_TP_DATAREQUEST_PRESSURE_TEMPERATURE = 1,
    VCSEC_TPDataRequest_E_TP_DATAREQUEST_NEW_SENSOR_INFO = 2,
    VCSEC_TPDataRequest_E_TP_DATAREQUEST_WHEEL_ROTATION_DIRECTION = 3,
    VCSEC_TPDataRequest_E_TP_DATAREQUEST_ACCEL = 4,
    VCSEC_TPDataRequest_E_TP_DATAREQUEST_MOTION_DETECTION_START = 5,
    VCSEC_TPDataRequest_E_TP_DATAREQUEST_READ_ALARMS = 6,
    VCSEC_TPDataRequest_E_TP_DATAREQUEST_MOTION_DETECTION_STOP = 7
} VCSEC_TPDataRequest_E;

typedef enum _VCSEC_TPMSAdvType_E {
    VCSEC_TPMSAdvType_E_TPMS_ADV_TYPE_SEMI = 0
} VCSEC_TPMSAdvType_E;

typedef enum _VCSEC_TPNotifyReason_E {
    VCSEC_TPNotifyReason_E_TP_NOTIFY_REASON_UNKNOWN = 0,
    VCSEC_TPNotifyReason_E_TP_NOTIFY_REASON_LOW_PRESSURE = 1,
    VCSEC_TPNotifyReason_E_TP_NOTIFY_REASON_PT_VALUE_UPDATE = 2,
    VCSEC_TPNotifyReason_E_TP_NOTIFY_REASON_WHEEL_MOVING = 3,
    VCSEC_TPNotifyReason_E_TP_NOTIFY_REASON_WHEEL_ROTATION_DIRECTION_CALCULATION_READY = 4,
    VCSEC_TPNotifyReason_E_TP_NOTIFY_REASON_LF = 5,
    VCSEC_TPNotifyReason_E_TP_NOTIFY_REASON_FAULT = 6
} VCSEC_TPNotifyReason_E;

typedef enum _VCSEC_TPNotifyTrackerCommand_E {
    VCSEC_TPNotifyTrackerCommand_E_TP_NOTIFYTRACKER_COMMAND_NONE = 0,
    VCSEC_TPNotifyTrackerCommand_E_TP_NOTIFYTRACKER_COMMAND_GET_STATS = 1,
    VCSEC_TPNotifyTrackerCommand_E_TP_NOTIFYTRACKER_COMMAND_CLEAR_STATS = 2
} VCSEC_TPNotifyTrackerCommand_E;

typedef enum _VCSEC_UpdaterLocation {
    VCSEC_UpdaterLocation_UPDATER_LOCATION_NONE = 0,
    VCSEC_UpdaterLocation_UPDATER_LOCATION_APPLICATION = 1,
    VCSEC_UpdaterLocation_UPDATER_LOCATION_BOOTLOADER = 2,
    VCSEC_UpdaterLocation_UPDATER_LOCATION_SECONDARY_APPLICATION = 3,
    VCSEC_UpdaterLocation_UPDATER_LOCATION_APPLICATION_IN_EXTERNAL_FLASH = 4
} VCSEC_UpdaterLocation;

typedef enum _VCSEC_UpdaterStatusCode {
    VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_ERROR = 0,
    VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_WAIT = 1,
    VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_BLOCK_STAGED = 2,
    VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_IMAGE_STAGED = 3,
    VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_CRC_CHECK_SUCCESS = 4,
    VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_CRC_CHECK_FAIL = 5,
    VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_HASH_FAIL = 6,
    VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_SIGNATURE_FAIL = 7,
    VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_ERROR_HASH_RESTORE_FAIL = 8,
    VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_LOCATION_SET = 9
} VCSEC_UpdaterStatusCode;

typedef enum _VCSEC_UWBAvailability {
    VCSEC_UWBAvailability_UWB_AVAILABILITY_UNKNOWN = 0,
    VCSEC_UWBAvailability_UWB_AVAILABILITY_AVAILABLE = 1,
    VCSEC_UWBAvailability_UWB_AVAILABILITY_UNAVAILABLE_UNSUPPORTED_DEVICE = 2,
    VCSEC_UWBAvailability_UWB_AVAILABILITY_UNAVAILABLE_PERMISSION_DENIED = 3,
    VCSEC_UWBAvailability_UWB_AVAILABILITY_UNAVAILABLE = 4
} VCSEC_UWBAvailability;

typedef enum _VCSEC_VehicleLockState_E {
    VCSEC_VehicleLockState_E_VEHICLELOCKSTATE_UNLOCKED = 0,
    VCSEC_VehicleLockState_E_VEHICLELOCKSTATE_LOCKED = 1,
    VCSEC_VehicleLockState_E_VEHICLELOCKSTATE_INTERNAL_LOCKED = 2,
    VCSEC_VehicleLockState_E_VEHICLELOCKSTATE_SELECTIVE_UNLOCKED = 3
} VCSEC_VehicleLockState_E;

typedef enum _VCSEC_VehicleSleepStatus_E {
    VCSEC_VehicleSleepStatus_E_VEHICLE_SLEEP_STATUS_UNKNOWN = 0,
    VCSEC_VehicleSleepStatus_E_VEHICLE_SLEEP_STATUS_AWAKE = 1,
    VCSEC_VehicleSleepStatus_E_VEHICLE_SLEEP_STATUS_ASLEEP = 2
} VCSEC_VehicleSleepStatus_E;

typedef enum _VCSEC_WhitelistKeyPermission_E {
    VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_ADD_TO_WHITELIST = 0,
    VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_LOCAL_UNLOCK = 1,
    VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_LOCAL_DRIVE = 2,
    VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_REMOTE_UNLOCK = 3,
    VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_REMOTE_DRIVE = 4,
    VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_CHANGE_PERMISSIONS = 5,
    VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_REMOVE_FROM_WHITELIST = 6,
    VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_REMOVE_SELF_FROM_WHITELIST = 7,
    VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_MODIFY_FLEET_RESERVED_SLOTS = 8,
    VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_UNKNOWN = 31
} VCSEC_WhitelistKeyPermission_E;

typedef enum _VCSEC_WhitelistOperation_information_E {
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_NONE = 0,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_UNDOCUMENTED_ERROR = 1,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_NO_PERMISSION_TO_REMOVE_ONESELF = 2,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_KEYFOB_SLOTS_FULL = 3,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_WHITELIST_FULL = 4,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_NO_PERMISSION_TO_ADD = 5,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_INVALID_PUBLIC_KEY = 6,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_NO_PERMISSION_TO_REMOVE = 7,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_NO_PERMISSION_TO_CHANGE_PERMISSIONS = 8,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_ATTEMPTING_TO_ELEVATE_OTHER_ABOVE_ONESELF = 9,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_ATTEMPTING_TO_DEMOTE_SUPERIOR_TO_ONESELF = 10,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_ATTEMPTING_TO_REMOVE_OWN_PERMISSIONS = 11,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_PUBLIC_KEY_NOT_ON_WHITELIST = 12,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_ATTEMPTING_TO_ADD_KEY_THAT_IS_ALREADY_ON_THE_WHITELIST = 13,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_NOT_ALLOWED_TO_ADD_UNLESS_ON_READER = 14,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_FM_MODIFYING_OUTSIDE_OF_F_MODE = 15,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_FM_ATTEMPTING_TO_ADD_PERMANENT_KEY = 16,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_FM_ATTEMPTING_TO_REMOVE_PERMANENT_KEY = 17,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_KEYCHAIN_WHILE_FS_FULL = 18,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_ATTEMPTING_TO_ADD_KEY_WITHOUT_ROLE = 19,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_ATTEMPTING_TO_ADD_KEY_WITH_SERVICE_ROLE = 20,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_NON_SERVICE_KEY_ATTEMPTING_TO_ADD_SERVICE_TECH = 21,
    VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_SERVICE_KEY_ATTEMPTING_TO_ADD_SERVICE_TECH_OUTSIDE_SERVICE_MODE = 22
} VCSEC_WhitelistOperation_information_E;

/* Struct definitions */
typedef struct _VCSEC_AccelData {
    int32_t xAccel_g;
    int32_t zAccel_g;
} VCSEC_AccelData;

typedef struct _VCSEC_AlertHandlePulledWithoutAuth {
    uint32_t timeSinceAlertSet_ms;
    VCSEC_HandlePulled_E handlePulled;
    uint32_t connectionCount;
    bool unknownDevicePresent;
    bool authRequested;
    pb_callback_t deviceSpecificPayload;
} VCSEC_AlertHandlePulledWithoutAuth;

typedef struct _VCSEC_Alert {
    pb_size_t which_sub_message;
    union {
        VCSEC_AlertHandlePulledWithoutAuth alertHandlePulledWithoutAuth;
    } sub_message;
} VCSEC_Alert;

typedef struct _VCSEC_AppDeviceInfo {
    pb_callback_t hardware_model_sha256;
    VCSEC_AppOperatingSystem os;
    VCSEC_UWBAvailability UWBAvailable;
} VCSEC_AppDeviceInfo;

typedef struct _VCSEC_AuthenticationRequestToken {
    pb_callback_t token;
} VCSEC_AuthenticationRequestToken;

typedef struct _VCSEC_AuthenticationRequest {
    bool has_sessionInfo;
    VCSEC_AuthenticationRequestToken sessionInfo;
    VCSEC_AuthenticationLevel_E requestedLevel;
    pb_callback_t reasonsForAuth;
} VCSEC_AuthenticationRequest;

typedef struct _VCSEC_AuthenticationResponse {
    VCSEC_AuthenticationLevel_E authenticationLevel;
    uint32_t estimatedDistance;
    VCSEC_AuthenticationRejection_E authenticationRejection;
} VCSEC_AuthenticationResponse;

typedef struct _VCSEC_BLEConfig {
    pb_size_t which_sub_message;
    union {
        uint32_t ADVInterval;
        uint32_t sleepClockAccuracy;
    } sub_message;
} VCSEC_BLEConfig;

typedef struct _VCSEC_BLEConfigAll {
    uint32_t ADVInterval;
    uint32_t sleepClockAccuracy;
} VCSEC_BLEConfigAll;

typedef struct _VCSEC_BLEConfigCommand {
    VCSEC_BLEConfigCommandType_E BLEConfigCommandType;
    bool has_BLEConfig;
    VCSEC_BLEConfig BLEConfig;
} VCSEC_BLEConfigCommand;

typedef struct _VCSEC_Capabilities {
    bool chargePortOpen;
    bool chargePortClose;
} VCSEC_Capabilities;

typedef struct _VCSEC_ClosureMoveRequest {
    VCSEC_ClosureMoveType_E frontDriverDoor;
    VCSEC_ClosureMoveType_E frontPassengerDoor;
    VCSEC_ClosureMoveType_E rearDriverDoor;
    VCSEC_ClosureMoveType_E rearPassengerDoor;
    VCSEC_ClosureMoveType_E rearTrunk;
    VCSEC_ClosureMoveType_E frontTrunk;
    VCSEC_ClosureMoveType_E chargePort;
} VCSEC_ClosureMoveRequest;

typedef struct _VCSEC_ClosureStatuses {
    VCSEC_ClosureState_E frontDriverDoor;
    VCSEC_ClosureState_E frontPassengerDoor;
    VCSEC_ClosureState_E rearDriverDoor;
    VCSEC_ClosureState_E rearPassengerDoor;
    VCSEC_ClosureState_E rearTrunk;
    VCSEC_ClosureState_E frontTrunk;
    VCSEC_ClosureState_E chargePort;
} VCSEC_ClosureStatuses;

typedef struct _VCSEC_CodeDescriptor {
    VCSEC_UpdaterLocation codeDescriptorLocation;
    uint32_t version;
    pb_callback_t codeDescriptorBytes;
} VCSEC_CodeDescriptor;

typedef struct _VCSEC_ConnectionMetrics {
    uint32_t goodConnEventCount;
    uint32_t missedConnEventCount;
    uint32_t badCRCConnEventCount;
} VCSEC_ConnectionMetrics;

typedef struct _VCSEC_DelaySleepRequest {
    uint32_t delayTime_ms;
} VCSEC_DelaySleepRequest;

typedef struct _VCSEC_DeviceMotion {
    pb_callback_t states;
    VCSEC_Device_Motion_Confidence confidence;
} VCSEC_DeviceMotion;

typedef struct _VCSEC_FromRCI {
    pb_callback_t response;
} VCSEC_FromRCI;

typedef struct _VCSEC_Genealogy {
    pb_callback_t serialNumber;
    pb_callback_t partNumber;
} VCSEC_Genealogy;

typedef struct _VCSEC_GenealogyResponse {
    bool has_currentGenealogy;
    VCSEC_Genealogy currentGenealogy;
    VCSEC_GenealogyStatus_E status;
} VCSEC_GenealogyResponse;

typedef struct _VCSEC_GetCodeDescriptor {
    VCSEC_UpdaterLocation location;
} VCSEC_GetCodeDescriptor;

typedef struct _VCSEC_GetReaderKey {
    VCSEC_GetReaderKeyCommand command;
} VCSEC_GetReaderKey;

typedef struct _VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload {
    uint32_t keyChannel;
    VCSEC_AuthenticationLevel_E authenticationLevel;
    bool present;
    int32_t RSSILeft;
    int32_t RSSIRight;
    int32_t RSSIRear;
    int32_t RSSICenter;
    int32_t RSSIFront;
    int32_t RSSISecondary;
    int32_t RSSINFCCradle;
    int32_t RSSIRearLeft;
    int32_t RSSIRearRight;
    bool highThreshLeftPresent;
    bool highThreshRightPresent;
    bool highThreshCenterPresent;
    bool highThreshFrontPresent;
    bool highThreshRearPresent;
    bool highThreshRearLeftPresent;
    bool highThreshRearRightPresent;
    bool highThreshSecondaryPresent;
    bool highThreshNFCPresent;
    bool sortedDeltaBayesLeftPresent;
    bool sortedDeltaBayesRightPresent;
    bool rawDeltaBayesLeftPresent;
    bool rawDeltaBayesRightPresent;
} VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload;

typedef struct _VCSEC_KeyfobInfo {
    pb_callback_t appCRC;
    uint32_t batteryVoltage_mV;
    int32_t temperature_degreesC;
} VCSEC_KeyfobInfo;

typedef struct _VCSEC_KeyIdentifier {
    pb_byte_t publicKeySHA1[4];
} VCSEC_KeyIdentifier;

typedef struct _VCSEC_ActiveKey {
    bool has_activeKey;
    VCSEC_KeyIdentifier activeKey;
} VCSEC_ActiveKey;

typedef struct _VCSEC_InformationRequest {
    VCSEC_InformationRequestType informationRequestType;
    pb_size_t which_sub_message;
    union {
        VCSEC_KeyIdentifier keyId;
        pb_callback_t publicKey;
        uint32_t slot;
    } sub_message;
} VCSEC_InformationRequest;

typedef struct _VCSEC_KeyIdentity {
    pb_size_t which_sub_message;
    union {
        pb_callback_t public_key;
        pb_callback_t key_id;
    } sub_message;
} VCSEC_KeyIdentity;

typedef struct _VCSEC_GetSessionInfoRequest {
    bool has_key_identity;
    VCSEC_KeyIdentity key_identity;
} VCSEC_GetSessionInfoRequest;

typedef struct _VCSEC_KeyMetadata {
    VCSEC_KeyFormFactor keyFormFactor;
} VCSEC_KeyMetadata;

typedef struct _VCSEC_KeyStatusInfo {
    pb_callback_t keyStatuses;
} VCSEC_KeyStatusInfo;

typedef struct _VCSEC_MIConfigurationData {
    pb_callback_t data_;
} VCSEC_MIConfigurationData;

typedef struct _VCSEC_MISessionRequest {
    uint32_t sessionId;
    pb_callback_t accessoryConfigurationData;
} VCSEC_MISessionRequest;

typedef struct _VCSEC_MISessionResponse {
    uint32_t sessionId;
    pb_size_t which_sub_message;
    union {
        VCSEC_MIConfigurationData MIConfigurationData;
        VCSEC_MIError_E errorCode;
    } sub_message;
} VCSEC_MISessionResponse;

typedef struct _VCSEC_MISessionStop {
    pb_size_t which_sub_message;
    union {
        uint32_t sessionId;
    } sub_message;
} VCSEC_MISessionStop;

typedef struct _VCSEC_MISessionStopped {
    pb_size_t which_sub_message;
    union {
        uint32_t sessionId;
    } sub_message;
} VCSEC_MISessionStopped;

typedef struct _VCSEC_NominalError {
    VCSEC_GenericError_E genericError;
} VCSEC_NominalError;

typedef struct _VCSEC_PersonalizationInformation {
    pb_callback_t VIN;
} VCSEC_PersonalizationInformation;

typedef PB_BYTES_ARRAY_T(65) VCSEC_PublicKey_PublicKeyRaw_t;
typedef struct _VCSEC_PublicKey {
    VCSEC_PublicKey_PublicKeyRaw_t PublicKeyRaw;
} VCSEC_PublicKey;

typedef struct _VCSEC_KeyStatus {
    bool has_keyId;
    VCSEC_KeyIdentifier keyId;
    VCSEC_NFCPresence nfcPresence;
    VCSEC_BLEPresence blePresence;
    bool has_publicKey;
    VCSEC_PublicKey publicKey;
    VCSEC_KeyFormFactor keyFormFactor;
    uint32_t slot;
} VCSEC_KeyStatus;

typedef struct _VCSEC_NFCSEState {
    VCSEC_NFCSEDevicePubKeyState_E devicePubKeyState;
    VCSEC_NFCSEVehiclePubKeyState_E vehiclePubKeyState;
    VCSEC_NFCSESharedSecretState_E sharedSecretState;
    VCSEC_NFCSEInsecureCommandState_E insecureCommandState;
    bool has_vehiclePubKey;
    VCSEC_PublicKey vehiclePubKey;
} VCSEC_NFCSEState;

typedef struct _VCSEC_PermissionChange {
    bool has_key;
    VCSEC_PublicKey key;
    pb_size_t permission_count;
    VCSEC_WhitelistKeyPermission_E permission[10];
    uint32_t secondsToBeActive;
    VCSEC_Role keyRole;
} VCSEC_PermissionChange;

typedef struct _VCSEC_RCISignature {
    pb_callback_t nonce;
    pb_callback_t tag;
} VCSEC_RCISignature;

typedef struct _VCSEC_ReplaceKey {
    pb_size_t which_sub_message;
    union {
        VCSEC_PublicKey publicKeyToReplace;
        uint32_t slotToReplace;
    } sub_message;
    bool has_keyToAdd;
    VCSEC_PublicKey keyToAdd;
    VCSEC_Role keyRole;
    bool impermanent;
} VCSEC_ReplaceKey;

typedef struct _VCSEC_ResetTrackerStats {
    uint32_t totalResetsDueToPowerOn;
    uint32_t totalResetsDueToPinReset;
    uint32_t totalResetsDueToVDDSLoss;
    uint32_t totalResetsDueToVDDLoss;
    uint32_t totalResetsDueToVDDRLoss;
    uint32_t totalResetsDueToClockLoss;
    uint32_t totalResetsDueToSystemReset;
    uint32_t totalResetsDueToWarmReset;
    uint32_t totalResetsDueToWakeupFromShutdown;
    uint32_t totalResetsDueToWakeupFromTCKNoise;
} VCSEC_ResetTrackerStats;

typedef PB_BYTES_ARRAY_T(65) VCSEC_SessionInfo_publicKey_t;
typedef struct _VCSEC_SessionInfo {
    pb_callback_t token;
    uint32_t counter;
    VCSEC_SessionInfo_publicKey_t publicKey;
} VCSEC_SessionInfo;

typedef struct _VCSEC_SetUpdaterLocation {
    VCSEC_UpdaterLocation updaterLocation;
} VCSEC_SetUpdaterLocation;

typedef struct _VCSEC_Signatures {
    char dummy_field;
} VCSEC_Signatures;

typedef struct _VCSEC_Signatures_SessionInfo {
    uint32_t counter;
    pb_callback_t publicKey;
    pb_callback_t epoch;
    uint32_t clock_time;
    VCSEC_Session_Info_Status status;
} VCSEC_Signatures_SessionInfo;

typedef PB_BYTES_ARRAY_T(100) VCSEC_SignedMessage_protobufMessageAsBytes_t;
typedef PB_BYTES_ARRAY_T(16) VCSEC_SignedMessage_signature_t;
typedef PB_BYTES_ARRAY_T(4) VCSEC_SignedMessage_keyId_t;
typedef struct _VCSEC_SignedMessage {
    pb_callback_t token;
    VCSEC_SignedMessage_protobufMessageAsBytes_t protobufMessageAsBytes;
    VCSEC_SignatureType signatureType;
    VCSEC_SignedMessage_signature_t signature;
    VCSEC_SignedMessage_keyId_t keyId;
    uint32_t counter;
} VCSEC_SignedMessage;

typedef struct _VCSEC_SignedMessage_status {
    uint32_t counter;
    VCSEC_SignedMessage_information_E signedMessageInformation;
} VCSEC_SignedMessage_status;

typedef struct _VCSEC_SleepManagerRequest {
    pb_size_t which_sub_message;
    union {
        VCSEC_DelaySleepRequest delaySleepRequest;
        VCSEC_SleepManagerCommand_E sleepManagerCommand;
    } sub_message;
} VCSEC_SleepManagerRequest;

typedef struct _VCSEC_SleepManagerStats {
    uint32_t totalCPUTime;
    uint32_t totalAwakeTime;
    VCSEC_BLEAdditionalTRIMApplied_E isBLETrimApplied;
} VCSEC_SleepManagerStats;

typedef struct _VCSEC_StageBlock {
    uint32_t blockAddress;
    pb_callback_t blockToStage;
} VCSEC_StageBlock;

typedef struct _VCSEC_ToRCI {
    pb_callback_t command;
    pb_size_t which_sub_message;
    union {
        pb_callback_t HMAC_signature;
        VCSEC_RCISignature rci_signature;
    } sub_message;
} VCSEC_ToRCI;

typedef struct _VCSEC_TPAdv {
    int32_t pressure;
    int32_t temperature;
    VCSEC_TPNotifyReason_E TPNotifyReason;
    uint32_t batteryVoltage_mV;
    uint32_t advertismentCount;
    VCSEC_TPMSAdvType_E TPMSAdvType;
} VCSEC_TPAdv;

typedef struct _VCSEC_TPData {
    int32_t pressure;
    int32_t temperature;
} VCSEC_TPData;

typedef struct _VCSEC_TPLRDetection {
    VCSEC_LRDetectionResult_E LRDetectionResult;
    uint32_t totalPeriod_ms;
    uint32_t x90degCnt;
    uint32_t x270degCnt;
    int32_t zAcceleration_dg;
    uint32_t zAccelDiffCnt;
} VCSEC_TPLRDetection;

typedef struct _VCSEC_TPMotionConfig {
    uint32_t pressureDelta;
    uint32_t temperatureDelta;
    VCSEC_MLXWakePeriod_E PTMeasurePeriod;
} VCSEC_TPMotionConfig;

typedef struct _VCSEC_TPMSAlarms {
    bool pressure;
    bool temperature;
    bool acceleration;
    bool voltage;
    bool LFDetect;
    bool wheelMotion;
} VCSEC_TPMSAlarms;

typedef struct _VCSEC_TPNewSensorData {
    bool has_sensorPublicKey;
    VCSEC_PublicKey sensorPublicKey;
} VCSEC_TPNewSensorData;

typedef struct _VCSEC_TPNotifyTrackerStats {
    uint32_t notifyReasonUnknownCount;
    uint32_t notifyReasonLowPressureCount;
    uint32_t notifyReasonPTValueUpdateCount;
    uint32_t notifyReasonWheelMovingCount;
    uint32_t notifyReasonWheelRotationDirectionReadyCount;
    uint32_t notifyReasonLFCount;
    uint32_t notifyReasonFaultCount;
} VCSEC_TPNotifyTrackerStats;

typedef struct _VCSEC_TPStationaryConfig {
    uint32_t lowPressureThreshold;
    uint32_t pressureDelta;
    VCSEC_MLXWakePeriod_E accelMeasurePeriod;
    int32_t absoluteAccelWakeThreshold;
    uint32_t PTMeasureMod;
} VCSEC_TPStationaryConfig;

typedef struct _VCSEC_SetTPConfigration {
    bool has_stationaryConfig;
    VCSEC_TPStationaryConfig stationaryConfig;
    bool has_motionConfig;
    VCSEC_TPMotionConfig motionConfig;
} VCSEC_SetTPConfigration;

typedef struct _VCSEC_TPWheelUnitInfo {
    pb_callback_t TIAppCRC;
    pb_callback_t MLXAppCRC;
    uint32_t batteryVoltage_mV;
} VCSEC_TPWheelUnitInfo;

typedef struct _VCSEC_UnknownKeyInfo {
    bool has_keyStatus;
    VCSEC_KeyStatus keyStatus;
    bool has_publicKey;
    VCSEC_PublicKey publicKey;
    VCSEC_KeyFormFactor keyFormFactor;
} VCSEC_UnknownKeyInfo;

typedef struct _VCSEC_UnsecureNotification {
    bool notifyUser;
    bool has_closureStatuses;
    VCSEC_ClosureStatuses closureStatuses;
} VCSEC_UnsecureNotification;

typedef struct _VCSEC_UpdaterStatus {
    VCSEC_UpdaterStatusCode statusCode;
    VCSEC_UpdaterLocation location;
    uint32_t nextAddressNumber;
} VCSEC_UpdaterStatus;

typedef struct _VCSEC_UpdaterResponse {
    pb_size_t which_sub_message;
    union {
        VCSEC_CodeDescriptor codeDescriptorMessage;
        VCSEC_UpdaterStatus updaterStatus;
    } sub_message;
} VCSEC_UpdaterResponse;

typedef struct _VCSEC_VehicleInfo {
    pb_callback_t VIN;
} VCSEC_VehicleInfo;

typedef struct _VCSEC_VehicleStatus {
    bool has_closureStatuses;
    VCSEC_ClosureStatuses closureStatuses;
    VCSEC_VehicleLockState_E vehicleLockState;
    VCSEC_VehicleSleepStatus_E vehicleSleepStatus;
} VCSEC_VehicleStatus;

typedef struct _VCSEC_VerifyAndInstallApp {
    pb_callback_t sha256;
    pb_callback_t rValue;
    pb_callback_t sValue;
} VCSEC_VerifyAndInstallApp;

typedef struct _VCSEC_UpdaterCommand {
    pb_size_t which_sub_message;
    union {
        VCSEC_GetCodeDescriptor getCodeDescriptor;
        VCSEC_SetUpdaterLocation setUpdaterLocation;
        VCSEC_StageBlock stageBlock;
        VCSEC_VerifyAndInstallApp verifyAndInstallApp;
        pb_callback_t firmwareInfo;
    } sub_message;
} VCSEC_UpdaterCommand;

typedef struct _VCSEC_WhitelistEntryInfo {
    bool has_keyId;
    VCSEC_KeyIdentifier keyId;
    bool has_publicKey;
    VCSEC_PublicKey publicKey;
    pb_callback_t permissions;
    bool has_metadataForKey;
    VCSEC_KeyMetadata metadataForKey;
    uint32_t secondsEntryRemainsActive;
    uint32_t slot;
    VCSEC_Role keyRole;
} VCSEC_WhitelistEntryInfo;

typedef struct _VCSEC_WhitelistInfo {
    uint32_t numberOfEntries;
    pb_size_t whitelistEntries_count;
    VCSEC_KeyIdentifier whitelistEntries[20];
    uint32_t slotMask;
} VCSEC_WhitelistInfo;

typedef struct _VCSEC_WhitelistOperation {
    pb_size_t which_sub_message;
    union {
        VCSEC_PublicKey addPublicKeyToWhitelist;
        VCSEC_PublicKey removePublicKeyFromWhitelist;
        VCSEC_PermissionChange addPermissionsToPublicKey;
        VCSEC_PermissionChange removePermissionsFromPublicKey;
        VCSEC_PermissionChange addKeyToWhitelistAndAddPermissions;
        VCSEC_PermissionChange updateKeyAndPermissions;
        VCSEC_PermissionChange addImpermanentKey;
        VCSEC_PermissionChange addImpermanentKeyAndRemoveExisting;
        bool removeAllImpermanentKeys;
        VCSEC_ReplaceKey replaceKey;
    } sub_message;
    bool has_metadataForKey;
    VCSEC_KeyMetadata metadataForKey;
} VCSEC_WhitelistOperation;

typedef struct _VCSEC_UnsignedMessage {
    pb_size_t which_sub_message;
    union {
        VCSEC_InformationRequest InformationRequest;
        VCSEC_RKEAction_E RKEAction;
        VCSEC_AuthenticationResponse authenticationResponse;
        VCSEC_ClosureMoveRequest closureMoveRequest;
        VCSEC_TPAdv TPAdv;
        VCSEC_WhitelistOperation WhitelistOperation;
        VCSEC_UpdaterResponse updaterResponse;
        VCSEC_GenealogyResponse genealogyResponse;
        VCSEC_KeyMetadata setMetaDataForKey;
        VCSEC_KeyfobInfo keyfobInfo;
        VCSEC_IMUState_E IMUState;
        VCSEC_NFCSEState nfcseState;
        VCSEC_SleepManagerStats lowPowerDeviceSleepManagerStats;
        VCSEC_TPData TPData;
        VCSEC_TPWheelUnitInfo TPWheelUnitInfo;
        VCSEC_ResetTrackerStats resetTrackerStats;
        VCSEC_TPNotifyTrackerStats TPNotifyTrackerStats;
        VCSEC_TPNewSensorData TPNewSensorData;
        VCSEC_TPLRDetection TPLRDetection;
        VCSEC_ConnectionMetrics connectionMetrics;
        VCSEC_Activity_E deviceActivity;
        VCSEC_GetSessionInfoRequest getEpochSessionInfo;
        VCSEC_FromRCI fromRCIResponse;
        VCSEC_BLEConfigAll BLEConfigAll;
        VCSEC_DeviceMotion deviceMotion;
        VCSEC_AppDeviceInfo appDeviceInfo;
        VCSEC_GetReaderKey getReaderKey;
        VCSEC_MISessionResponse MISessionResponse;
        VCSEC_MISessionStopped MISessionStopped;
        VCSEC_AccelData accelData;
        VCSEC_TPMSAlarms TPMSAlarms;
    } sub_message;
    bool has_personalizationInformation;
    VCSEC_PersonalizationInformation personalizationInformation;
} VCSEC_UnsignedMessage;

typedef struct _VCSEC_ToVCSECMessage {
    pb_size_t which_sub_message;
    union {
        VCSEC_SignedMessage signedMessage;
        VCSEC_UnsignedMessage unsignedMessage;
    } sub_message;
} VCSEC_ToVCSECMessage;

typedef struct _VCSEC_WhitelistOperation_status {
    VCSEC_WhitelistOperation_information_E whitelistOperationInformation;
    bool has_signerOfOperation;
    VCSEC_KeyIdentifier signerOfOperation;
    VCSEC_OperationStatus_E operationStatus;
} VCSEC_WhitelistOperation_status;

typedef struct _VCSEC_CommandStatus {
    VCSEC_OperationStatus_E operationStatus;
    pb_size_t which_sub_message;
    union {
        VCSEC_SignedMessage_status signedMessageStatus;
        VCSEC_WhitelistOperation_status whitelistOperationStatus;
    } sub_message;
} VCSEC_CommandStatus;

typedef struct _VCSEC_FromVCSECMessage {
    pb_size_t which_sub_message;
    union {
        VCSEC_VehicleStatus vehicleStatus;
        VCSEC_SessionInfo sessionInfo;
        VCSEC_AuthenticationRequest authenticationRequest;
        VCSEC_CommandStatus commandStatus;
        VCSEC_PersonalizationInformation personalizationInformation;
        VCSEC_WhitelistInfo whitelistInfo;
        VCSEC_WhitelistEntryInfo whitelistEntryInfo;
        VCSEC_VehicleInfo vehicleInfo;
        VCSEC_Capabilities capabilities;
        VCSEC_KeyStatusInfo keyStatusInfo;
        VCSEC_ActiveKey activeKey;
        VCSEC_UnknownKeyInfo unknownKeyInfo;
        VCSEC_UpdaterCommand updaterCommand;
        VCSEC_GenealogyRequest_E genealogyRequest;
        VCSEC_SleepManagerRequest sleepManagerRequest;
        VCSEC_IMURequest_E imuRequest;
        VCSEC_NFCSERequest_E nfcseRequest;
        VCSEC_TPDataRequest_E TPDataRequest;
        VCSEC_ResetTrackerCommand_E resetTrackerCommand;
        VCSEC_TPNotifyTrackerCommand_E TPNotifyTrackerCommand;
        VCSEC_SetTPConfigration setTPConfiguration;
        VCSEC_UnsecureNotification unsecureNotification;
        VCSEC_Signatures_SessionInfo epochSessionInfo;
        VCSEC_ToRCI toRCICommand;
        VCSEC_RCI_control_E rciControl;
        VCSEC_BLEConfigCommand BLEConfigCommand;
        VCSEC_AppDeviceInfoRequest_E appDeviceInfoRequest;
        VCSEC_Alert alert;
        VCSEC_NominalError nominalError;
        VCSEC_MISessionRequest MISessionRequest;
        VCSEC_MISessionStop MISessionStop;
        VCSEC_TPMSAlarms clearTPMSAlarms;
    } sub_message;
} VCSEC_FromVCSECMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _VCSEC_Activity_E_MIN VCSEC_Activity_E_ACTIVITY_NONE
#define _VCSEC_Activity_E_MAX VCSEC_Activity_E_ACTIVITY_SIGNIFICANT_MOTION
#define _VCSEC_Activity_E_ARRAYSIZE ((VCSEC_Activity_E)(VCSEC_Activity_E_ACTIVITY_SIGNIFICANT_MOTION+1))

#define _VCSEC_AppDeviceInfoRequest_E_MIN VCSEC_AppDeviceInfoRequest_E_APP_DEVICE_INFO_REQUEST_NONE
#define _VCSEC_AppDeviceInfoRequest_E_MAX VCSEC_AppDeviceInfoRequest_E_APP_DEVICE_INFO_REQUEST_GET_MODEL_NUMBER
#define _VCSEC_AppDeviceInfoRequest_E_ARRAYSIZE ((VCSEC_AppDeviceInfoRequest_E)(VCSEC_AppDeviceInfoRequest_E_APP_DEVICE_INFO_REQUEST_GET_MODEL_NUMBER+1))

#define _VCSEC_AppOperatingSystem_MIN VCSEC_AppOperatingSystem_UNKNOWN
#define _VCSEC_AppOperatingSystem_MAX VCSEC_AppOperatingSystem_IOS
#define _VCSEC_AppOperatingSystem_ARRAYSIZE ((VCSEC_AppOperatingSystem)(VCSEC_AppOperatingSystem_IOS+1))

#define _VCSEC_AuthenticationLevel_E_MIN VCSEC_AuthenticationLevel_E_AUTHENTICATION_LEVEL_NONE
#define _VCSEC_AuthenticationLevel_E_MAX VCSEC_AuthenticationLevel_E_AUTHENTICATION_LEVEL_DRIVE
#define _VCSEC_AuthenticationLevel_E_ARRAYSIZE ((VCSEC_AuthenticationLevel_E)(VCSEC_AuthenticationLevel_E_AUTHENTICATION_LEVEL_DRIVE+1))

#define _VCSEC_AuthenticationReason_E_MIN VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_NOT_DOCUMENTED
#define _VCSEC_AuthenticationReason_E_MAX VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_IMMOBILIZER
#define _VCSEC_AuthenticationReason_E_ARRAYSIZE ((VCSEC_AuthenticationReason_E)(VCSEC_AuthenticationReason_E_AUTHENTICATIONREASON_IMMOBILIZER+1))

#define _VCSEC_AuthenticationRejection_E_MIN VCSEC_AuthenticationRejection_E_AUTHENTICATIONREJECTION_NONE
#define _VCSEC_AuthenticationRejection_E_MAX VCSEC_AuthenticationRejection_E_AUTHENTICATIONREJECTION_NO_TOKEN
#define _VCSEC_AuthenticationRejection_E_ARRAYSIZE ((VCSEC_AuthenticationRejection_E)(VCSEC_AuthenticationRejection_E_AUTHENTICATIONREJECTION_NO_TOKEN+1))

#define _VCSEC_BLEAdditionalTRIMApplied_E_MIN VCSEC_BLEAdditionalTRIMApplied_E_BLE_ADDITIONAL_TRIM_APPLIED_NONE
#define _VCSEC_BLEAdditionalTRIMApplied_E_MAX VCSEC_BLEAdditionalTRIMApplied_E_BLE_ADDITIONAL_TRIM_APPLIED_NOT_APPLIED
#define _VCSEC_BLEAdditionalTRIMApplied_E_ARRAYSIZE ((VCSEC_BLEAdditionalTRIMApplied_E)(VCSEC_BLEAdditionalTRIMApplied_E_BLE_ADDITIONAL_TRIM_APPLIED_NOT_APPLIED+1))

#define _VCSEC_BLEConfigCommandType_E_MIN VCSEC_BLEConfigCommandType_E_BLE_CONFIG_COMMAND_TYPE_NONE
#define _VCSEC_BLEConfigCommandType_E_MAX VCSEC_BLEConfigCommandType_E_BLE_CONFIG_COMMAND_TYPE_WRITE
#define _VCSEC_BLEConfigCommandType_E_ARRAYSIZE ((VCSEC_BLEConfigCommandType_E)(VCSEC_BLEConfigCommandType_E_BLE_CONFIG_COMMAND_TYPE_WRITE+1))

#define _VCSEC_BLEPresence_MIN VCSEC_BLEPresence_BLE_PRESENCE_NOT_PRESENT
#define _VCSEC_BLEPresence_MAX VCSEC_BLEPresence_BLE_PRESENCE_PRESENT
#define _VCSEC_BLEPresence_ARRAYSIZE ((VCSEC_BLEPresence)(VCSEC_BLEPresence_BLE_PRESENCE_PRESENT+1))

#define _VCSEC_ClosureMoveType_E_MIN VCSEC_ClosureMoveType_E_CLOSURE_MOVE_TYPE_NONE
#define _VCSEC_ClosureMoveType_E_MAX VCSEC_ClosureMoveType_E_CLOSURE_MOVE_TYPE_CLOSE
#define _VCSEC_ClosureMoveType_E_ARRAYSIZE ((VCSEC_ClosureMoveType_E)(VCSEC_ClosureMoveType_E_CLOSURE_MOVE_TYPE_CLOSE+1))

#define _VCSEC_ClosureState_E_MIN VCSEC_ClosureState_E_CLOSURESTATE_CLOSED
#define _VCSEC_ClosureState_E_MAX VCSEC_ClosureState_E_CLOSURESTATE_FAILED_UNLATCH
#define _VCSEC_ClosureState_E_ARRAYSIZE ((VCSEC_ClosureState_E)(VCSEC_ClosureState_E_CLOSURESTATE_FAILED_UNLATCH+1))

#define _VCSEC_Device_Motion_Confidence_MIN VCSEC_Device_Motion_Confidence_DEVICE_MOTION_CONFIDENCE_UNKNOWN
#define _VCSEC_Device_Motion_Confidence_MAX VCSEC_Device_Motion_Confidence_DEVICE_MOTION_CONFIDENCE_HIGH
#define _VCSEC_Device_Motion_Confidence_ARRAYSIZE ((VCSEC_Device_Motion_Confidence)(VCSEC_Device_Motion_Confidence_DEVICE_MOTION_CONFIDENCE_HIGH+1))

#define _VCSEC_Device_Motion_State_MIN VCSEC_Device_Motion_State_DEVICE_MOTION_UNKNOWN
#define _VCSEC_Device_Motion_State_MAX VCSEC_Device_Motion_State_DEVICE_MOTION_CYCLING
#define _VCSEC_Device_Motion_State_ARRAYSIZE ((VCSEC_Device_Motion_State)(VCSEC_Device_Motion_State_DEVICE_MOTION_CYCLING+1))

#define _VCSEC_GenealogyRequest_E_MIN VCSEC_GenealogyRequest_E_GENEALOGYREQUEST_NONE
#define _VCSEC_GenealogyRequest_E_MAX VCSEC_GenealogyRequest_E_GENEALOGYREQUEST_TPWHEELUNITINFO_READ
#define _VCSEC_GenealogyRequest_E_ARRAYSIZE ((VCSEC_GenealogyRequest_E)(VCSEC_GenealogyRequest_E_GENEALOGYREQUEST_TPWHEELUNITINFO_READ+1))

#define _VCSEC_GenealogyStatus_E_MIN VCSEC_GenealogyStatus_E_GENEALOGY_STATUS_NONE
#define _VCSEC_GenealogyStatus_E_MAX VCSEC_GenealogyStatus_E_GENEALOGY_STATUS_CRC_FAILURE
#define _VCSEC_GenealogyStatus_E_ARRAYSIZE ((VCSEC_GenealogyStatus_E)(VCSEC_GenealogyStatus_E_GENEALOGY_STATUS_CRC_FAILURE+1))

#define _VCSEC_GenericError_E_MIN VCSEC_GenericError_E_GENERICERROR_NONE
#define _VCSEC_GenericError_E_MAX VCSEC_GenericError_E_GENERICERROR_NOT_ALLOWED_OVER_TRANSPORT
#define _VCSEC_GenericError_E_ARRAYSIZE ((VCSEC_GenericError_E)(VCSEC_GenericError_E_GENERICERROR_NOT_ALLOWED_OVER_TRANSPORT+1))

#define _VCSEC_GetReaderKeyCommand_MIN VCSEC_GetReaderKeyCommand_GET_READER_KEY_COMMAND_UNKNOWN
#define _VCSEC_GetReaderKeyCommand_MAX VCSEC_GetReaderKeyCommand_GET_READER_KEY_COMMAND_STOP_LOOKING
#define _VCSEC_GetReaderKeyCommand_ARRAYSIZE ((VCSEC_GetReaderKeyCommand)(VCSEC_GetReaderKeyCommand_GET_READER_KEY_COMMAND_STOP_LOOKING+1))

#define _VCSEC_HandlePulled_E_MIN VCSEC_HandlePulled_E_HANDLE_PULLED_FRONT_DRIVER_DOOR
#define _VCSEC_HandlePulled_E_MAX VCSEC_HandlePulled_E_HANDLE_PULLED_OTHER
#define _VCSEC_HandlePulled_E_ARRAYSIZE ((VCSEC_HandlePulled_E)(VCSEC_HandlePulled_E_HANDLE_PULLED_OTHER+1))

#define _VCSEC_IMURequest_E_MIN VCSEC_IMURequest_E_IMU_REQUEST_NONE
#define _VCSEC_IMURequest_E_MAX VCSEC_IMURequest_E_IMU_REQUEST_DISABLE_CONTINUOUS_ACTIVITY_UPDATE
#define _VCSEC_IMURequest_E_ARRAYSIZE ((VCSEC_IMURequest_E)(VCSEC_IMURequest_E_IMU_REQUEST_DISABLE_CONTINUOUS_ACTIVITY_UPDATE+1))

#define _VCSEC_IMUState_E_MIN VCSEC_IMUState_E_IMU_STATE_NOT_CONFIGURED
#define _VCSEC_IMUState_E_MAX VCSEC_IMUState_E_IMU_STATE_INACTIVITY
#define _VCSEC_IMUState_E_ARRAYSIZE ((VCSEC_IMUState_E)(VCSEC_IMUState_E_IMU_STATE_INACTIVITY+1))

#define _VCSEC_InformationRequestType_MIN VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_STATUS
#define _VCSEC_InformationRequestType_MAX VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_CAPABILITIES
#define _VCSEC_InformationRequestType_ARRAYSIZE ((VCSEC_InformationRequestType)(VCSEC_InformationRequestType_INFORMATION_REQUEST_TYPE_GET_CAPABILITIES+1))

#define _VCSEC_KeyFormFactor_MIN VCSEC_KeyFormFactor_KEY_FORM_FACTOR_UNKNOWN
#define _VCSEC_KeyFormFactor_MAX VCSEC_KeyFormFactor_KEY_FORM_FACTOR_NFC_CARD_P71
#define _VCSEC_KeyFormFactor_ARRAYSIZE ((VCSEC_KeyFormFactor)(VCSEC_KeyFormFactor_KEY_FORM_FACTOR_NFC_CARD_P71+1))

#define _VCSEC_LRDetectionResult_E_MIN VCSEC_LRDetectionResult_E_LRDETECTIONRESULT_ERROR_MAXCNT
#define _VCSEC_LRDetectionResult_E_MAX VCSEC_LRDetectionResult_E_LRDETECTIONRESULT_RIGHT
#define _VCSEC_LRDetectionResult_E_ARRAYSIZE ((VCSEC_LRDetectionResult_E)(VCSEC_LRDetectionResult_E_LRDETECTIONRESULT_RIGHT+1))

#define _VCSEC_MIError_E_MIN VCSEC_MIError_E_ERROR_UNKNOWN
#define _VCSEC_MIError_E_MAX VCSEC_MIError_E_ERROR_BLE_PEER_UNAVAILABLE
#define _VCSEC_MIError_E_ARRAYSIZE ((VCSEC_MIError_E)(VCSEC_MIError_E_ERROR_BLE_PEER_UNAVAILABLE+1))

#define _VCSEC_MLXWakePeriod_E_MIN VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_2_MS
#define _VCSEC_MLXWakePeriod_E_MAX VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_NOT_SET
#define _VCSEC_MLXWakePeriod_E_ARRAYSIZE ((VCSEC_MLXWakePeriod_E)(VCSEC_MLXWakePeriod_E_MLXWAKEPERIOD_NOT_SET+1))

#define _VCSEC_NFCPresence_MIN VCSEC_NFCPresence_NFC_PRESENCE_NOT_PRESENT
#define _VCSEC_NFCPresence_MAX VCSEC_NFCPresence_NFC_PRESENCE_PRESENT_AT_CENTER_CONSOLE
#define _VCSEC_NFCPresence_ARRAYSIZE ((VCSEC_NFCPresence)(VCSEC_NFCPresence_NFC_PRESENCE_PRESENT_AT_CENTER_CONSOLE+1))

#define _VCSEC_NFCSEDevicePubKeyState_E_MIN VCSEC_NFCSEDevicePubKeyState_E_NFCSEC_DEVICEPUBKEY_STATE_NONE
#define _VCSEC_NFCSEDevicePubKeyState_E_MAX VCSEC_NFCSEDevicePubKeyState_E_NFCSEC_DEVICEPUBKEY_STATE_NOT_RETRIEVED
#define _VCSEC_NFCSEDevicePubKeyState_E_ARRAYSIZE ((VCSEC_NFCSEDevicePubKeyState_E)(VCSEC_NFCSEDevicePubKeyState_E_NFCSEC_DEVICEPUBKEY_STATE_NOT_RETRIEVED+1))

#define _VCSEC_NFCSEInsecureCommandState_E_MIN VCSEC_NFCSEInsecureCommandState_E_NFCSEC_INSECURE_COMMAND_STATE_NONE
#define _VCSEC_NFCSEInsecureCommandState_E_MAX VCSEC_NFCSEInsecureCommandState_E_NFCSEC_INSECURE_COMMAND_STATE_DISABLED
#define _VCSEC_NFCSEInsecureCommandState_E_ARRAYSIZE ((VCSEC_NFCSEInsecureCommandState_E)(VCSEC_NFCSEInsecureCommandState_E_NFCSEC_INSECURE_COMMAND_STATE_DISABLED+1))

#define _VCSEC_NFCSERequest_E_MIN VCSEC_NFCSERequest_E_NFCSE_REQUEST_NONE
#define _VCSEC_NFCSERequest_E_MAX VCSEC_NFCSERequest_E_NFCSE_REQUEST_GET_CURRENT_STATE
#define _VCSEC_NFCSERequest_E_ARRAYSIZE ((VCSEC_NFCSERequest_E)(VCSEC_NFCSERequest_E_NFCSE_REQUEST_GET_CURRENT_STATE+1))

#define _VCSEC_NFCSESharedSecretState_E_MIN VCSEC_NFCSESharedSecretState_E_NFCSEC_SHAREDSECRET_STATE_NONE
#define _VCSEC_NFCSESharedSecretState_E_MAX VCSEC_NFCSESharedSecretState_E_NFCSEC_SHAREDSECRET_STATE_NOT_GENERATED
#define _VCSEC_NFCSESharedSecretState_E_ARRAYSIZE ((VCSEC_NFCSESharedSecretState_E)(VCSEC_NFCSESharedSecretState_E_NFCSEC_SHAREDSECRET_STATE_NOT_GENERATED+1))

#define _VCSEC_NFCSEVehiclePubKeyState_E_MIN VCSEC_NFCSEVehiclePubKeyState_E_NFCSEC_VEHICLEPUBKEY_STATE_NONE
#define _VCSEC_NFCSEVehiclePubKeyState_E_MAX VCSEC_NFCSEVehiclePubKeyState_E_NFCSEC_VEHICLEPUBKEY_STATE_NOT_RETRIEVED
#define _VCSEC_NFCSEVehiclePubKeyState_E_ARRAYSIZE ((VCSEC_NFCSEVehiclePubKeyState_E)(VCSEC_NFCSEVehiclePubKeyState_E_NFCSEC_VEHICLEPUBKEY_STATE_NOT_RETRIEVED+1))

#define _VCSEC_OperationStatus_E_MIN VCSEC_OperationStatus_E_OPERATIONSTATUS_OK
#define _VCSEC_OperationStatus_E_MAX VCSEC_OperationStatus_E_OPERATIONSTATUS_ERROR
#define _VCSEC_OperationStatus_E_ARRAYSIZE ((VCSEC_OperationStatus_E)(VCSEC_OperationStatus_E_OPERATIONSTATUS_ERROR+1))

#define _VCSEC_RCI_control_E_MIN VCSEC_RCI_control_E_RCI_CONTROL_NONE
#define _VCSEC_RCI_control_E_MAX VCSEC_RCI_control_E_RCI_CONTROL_TURN_OFF
#define _VCSEC_RCI_control_E_ARRAYSIZE ((VCSEC_RCI_control_E)(VCSEC_RCI_control_E_RCI_CONTROL_TURN_OFF+1))

#define _VCSEC_ResetTrackerCommand_E_MIN VCSEC_ResetTrackerCommand_E_RESETTRACKER_COMMAND_NONE
#define _VCSEC_ResetTrackerCommand_E_MAX VCSEC_ResetTrackerCommand_E_RESETTRACKER_COMMAND_CLEAR_STATS
#define _VCSEC_ResetTrackerCommand_E_ARRAYSIZE ((VCSEC_ResetTrackerCommand_E)(VCSEC_ResetTrackerCommand_E_RESETTRACKER_COMMAND_CLEAR_STATS+1))

#define _VCSEC_RKEAction_E_MIN VCSEC_RKEAction_E_RKE_ACTION_UNLOCK
#define _VCSEC_RKEAction_E_MAX VCSEC_RKEAction_E_RKE_ACTION_WAKE_VEHICLE
#define _VCSEC_RKEAction_E_ARRAYSIZE ((VCSEC_RKEAction_E)(VCSEC_RKEAction_E_RKE_ACTION_WAKE_VEHICLE+1))

#define _VCSEC_Role_MIN VCSEC_Role_ROLE_NONE
#define _VCSEC_Role_MAX VCSEC_Role_ROLE_SERVICE_TECH
#define _VCSEC_Role_ARRAYSIZE ((VCSEC_Role)(VCSEC_Role_ROLE_SERVICE_TECH+1))

#define _VCSEC_Session_Info_Status_MIN VCSEC_Session_Info_Status_SESSION_INFO_STATUS_OK
#define _VCSEC_Session_Info_Status_MAX VCSEC_Session_Info_Status_SESSION_INFO_STATUS_KEY_NOT_ON_WHITELIST
#define _VCSEC_Session_Info_Status_ARRAYSIZE ((VCSEC_Session_Info_Status)(VCSEC_Session_Info_Status_SESSION_INFO_STATUS_KEY_NOT_ON_WHITELIST+1))

#define _VCSEC_SignatureType_MIN VCSEC_SignatureType_SIGNATURE_TYPE_AES_GCM
#define _VCSEC_SignatureType_MAX VCSEC_SignatureType_SIGNATURE_TYPE_UNSIGNED
#define _VCSEC_SignatureType_ARRAYSIZE ((VCSEC_SignatureType)(VCSEC_SignatureType_SIGNATURE_TYPE_UNSIGNED+1))

#define _VCSEC_SignedMessage_information_E_MIN VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_NONE
#define _VCSEC_SignedMessage_information_E_MAX VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_COULD_NOT_HASH_METADATA
#define _VCSEC_SignedMessage_information_E_ARRAYSIZE ((VCSEC_SignedMessage_information_E)(VCSEC_SignedMessage_information_E_SIGNEDMESSAGE_INFORMATION_FAULT_COULD_NOT_HASH_METADATA+1))

#define _VCSEC_SleepManagerCommand_E_MIN VCSEC_SleepManagerCommand_E_SLEEPMANAGER_COMMAND_NONE
#define _VCSEC_SleepManagerCommand_E_MAX VCSEC_SleepManagerCommand_E_SLEEPMANAGER_RESET_STATS
#define _VCSEC_SleepManagerCommand_E_ARRAYSIZE ((VCSEC_SleepManagerCommand_E)(VCSEC_SleepManagerCommand_E_SLEEPMANAGER_RESET_STATS+1))

#define _VCSEC_TPDataRequest_E_MIN VCSEC_TPDataRequest_E_TP_DATAREQUEST_NONE
#define _VCSEC_TPDataRequest_E_MAX VCSEC_TPDataRequest_E_TP_DATAREQUEST_MOTION_DETECTION_STOP
#define _VCSEC_TPDataRequest_E_ARRAYSIZE ((VCSEC_TPDataRequest_E)(VCSEC_TPDataRequest_E_TP_DATAREQUEST_MOTION_DETECTION_STOP+1))

#define _VCSEC_TPMSAdvType_E_MIN VCSEC_TPMSAdvType_E_TPMS_ADV_TYPE_SEMI
#define _VCSEC_TPMSAdvType_E_MAX VCSEC_TPMSAdvType_E_TPMS_ADV_TYPE_SEMI
#define _VCSEC_TPMSAdvType_E_ARRAYSIZE ((VCSEC_TPMSAdvType_E)(VCSEC_TPMSAdvType_E_TPMS_ADV_TYPE_SEMI+1))

#define _VCSEC_TPNotifyReason_E_MIN VCSEC_TPNotifyReason_E_TP_NOTIFY_REASON_UNKNOWN
#define _VCSEC_TPNotifyReason_E_MAX VCSEC_TPNotifyReason_E_TP_NOTIFY_REASON_FAULT
#define _VCSEC_TPNotifyReason_E_ARRAYSIZE ((VCSEC_TPNotifyReason_E)(VCSEC_TPNotifyReason_E_TP_NOTIFY_REASON_FAULT+1))

#define _VCSEC_TPNotifyTrackerCommand_E_MIN VCSEC_TPNotifyTrackerCommand_E_TP_NOTIFYTRACKER_COMMAND_NONE
#define _VCSEC_TPNotifyTrackerCommand_E_MAX VCSEC_TPNotifyTrackerCommand_E_TP_NOTIFYTRACKER_COMMAND_CLEAR_STATS
#define _VCSEC_TPNotifyTrackerCommand_E_ARRAYSIZE ((VCSEC_TPNotifyTrackerCommand_E)(VCSEC_TPNotifyTrackerCommand_E_TP_NOTIFYTRACKER_COMMAND_CLEAR_STATS+1))

#define _VCSEC_UpdaterLocation_MIN VCSEC_UpdaterLocation_UPDATER_LOCATION_NONE
#define _VCSEC_UpdaterLocation_MAX VCSEC_UpdaterLocation_UPDATER_LOCATION_APPLICATION_IN_EXTERNAL_FLASH
#define _VCSEC_UpdaterLocation_ARRAYSIZE ((VCSEC_UpdaterLocation)(VCSEC_UpdaterLocation_UPDATER_LOCATION_APPLICATION_IN_EXTERNAL_FLASH+1))

#define _VCSEC_UpdaterStatusCode_MIN VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_ERROR
#define _VCSEC_UpdaterStatusCode_MAX VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_LOCATION_SET
#define _VCSEC_UpdaterStatusCode_ARRAYSIZE ((VCSEC_UpdaterStatusCode)(VCSEC_UpdaterStatusCode_UPDATER_STATUS_CODE_LOCATION_SET+1))

#define _VCSEC_UWBAvailability_MIN VCSEC_UWBAvailability_UWB_AVAILABILITY_UNKNOWN
#define _VCSEC_UWBAvailability_MAX VCSEC_UWBAvailability_UWB_AVAILABILITY_UNAVAILABLE
#define _VCSEC_UWBAvailability_ARRAYSIZE ((VCSEC_UWBAvailability)(VCSEC_UWBAvailability_UWB_AVAILABILITY_UNAVAILABLE+1))

#define _VCSEC_VehicleLockState_E_MIN VCSEC_VehicleLockState_E_VEHICLELOCKSTATE_UNLOCKED
#define _VCSEC_VehicleLockState_E_MAX VCSEC_VehicleLockState_E_VEHICLELOCKSTATE_SELECTIVE_UNLOCKED
#define _VCSEC_VehicleLockState_E_ARRAYSIZE ((VCSEC_VehicleLockState_E)(VCSEC_VehicleLockState_E_VEHICLELOCKSTATE_SELECTIVE_UNLOCKED+1))

#define _VCSEC_VehicleSleepStatus_E_MIN VCSEC_VehicleSleepStatus_E_VEHICLE_SLEEP_STATUS_UNKNOWN
#define _VCSEC_VehicleSleepStatus_E_MAX VCSEC_VehicleSleepStatus_E_VEHICLE_SLEEP_STATUS_ASLEEP
#define _VCSEC_VehicleSleepStatus_E_ARRAYSIZE ((VCSEC_VehicleSleepStatus_E)(VCSEC_VehicleSleepStatus_E_VEHICLE_SLEEP_STATUS_ASLEEP+1))

#define _VCSEC_WhitelistKeyPermission_E_MIN VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_ADD_TO_WHITELIST
#define _VCSEC_WhitelistKeyPermission_E_MAX VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_UNKNOWN
#define _VCSEC_WhitelistKeyPermission_E_ARRAYSIZE ((VCSEC_WhitelistKeyPermission_E)(VCSEC_WhitelistKeyPermission_E_WHITELISTKEYPERMISSION_UNKNOWN+1))

#define _VCSEC_WhitelistOperation_information_E_MIN VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_NONE
#define _VCSEC_WhitelistOperation_information_E_MAX VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_SERVICE_KEY_ATTEMPTING_TO_ADD_SERVICE_TECH_OUTSIDE_SERVICE_MODE
#define _VCSEC_WhitelistOperation_information_E_ARRAYSIZE ((VCSEC_WhitelistOperation_information_E)(VCSEC_WhitelistOperation_information_E_WHITELISTOPERATION_INFORMATION_SERVICE_KEY_ATTEMPTING_TO_ADD_SERVICE_TECH_OUTSIDE_SERVICE_MODE+1))




#define VCSEC_AlertHandlePulledWithoutAuth_handlePulled_ENUMTYPE VCSEC_HandlePulled_E

#define VCSEC_AppDeviceInfo_os_ENUMTYPE VCSEC_AppOperatingSystem
#define VCSEC_AppDeviceInfo_UWBAvailable_ENUMTYPE VCSEC_UWBAvailability

#define VCSEC_AuthenticationRequest_requestedLevel_ENUMTYPE VCSEC_AuthenticationLevel_E
#define VCSEC_AuthenticationRequest_reasonsForAuth_ENUMTYPE VCSEC_AuthenticationReason_E


#define VCSEC_AuthenticationResponse_authenticationLevel_ENUMTYPE VCSEC_AuthenticationLevel_E
#define VCSEC_AuthenticationResponse_authenticationRejection_ENUMTYPE VCSEC_AuthenticationRejection_E



#define VCSEC_BLEConfigCommand_BLEConfigCommandType_ENUMTYPE VCSEC_BLEConfigCommandType_E


#define VCSEC_ClosureMoveRequest_frontDriverDoor_ENUMTYPE VCSEC_ClosureMoveType_E
#define VCSEC_ClosureMoveRequest_frontPassengerDoor_ENUMTYPE VCSEC_ClosureMoveType_E
#define VCSEC_ClosureMoveRequest_rearDriverDoor_ENUMTYPE VCSEC_ClosureMoveType_E
#define VCSEC_ClosureMoveRequest_rearPassengerDoor_ENUMTYPE VCSEC_ClosureMoveType_E
#define VCSEC_ClosureMoveRequest_rearTrunk_ENUMTYPE VCSEC_ClosureMoveType_E
#define VCSEC_ClosureMoveRequest_frontTrunk_ENUMTYPE VCSEC_ClosureMoveType_E
#define VCSEC_ClosureMoveRequest_chargePort_ENUMTYPE VCSEC_ClosureMoveType_E

#define VCSEC_ClosureStatuses_frontDriverDoor_ENUMTYPE VCSEC_ClosureState_E
#define VCSEC_ClosureStatuses_frontPassengerDoor_ENUMTYPE VCSEC_ClosureState_E
#define VCSEC_ClosureStatuses_rearDriverDoor_ENUMTYPE VCSEC_ClosureState_E
#define VCSEC_ClosureStatuses_rearPassengerDoor_ENUMTYPE VCSEC_ClosureState_E
#define VCSEC_ClosureStatuses_rearTrunk_ENUMTYPE VCSEC_ClosureState_E
#define VCSEC_ClosureStatuses_frontTrunk_ENUMTYPE VCSEC_ClosureState_E
#define VCSEC_ClosureStatuses_chargePort_ENUMTYPE VCSEC_ClosureState_E

#define VCSEC_CodeDescriptor_codeDescriptorLocation_ENUMTYPE VCSEC_UpdaterLocation

#define VCSEC_CommandStatus_operationStatus_ENUMTYPE VCSEC_OperationStatus_E



#define VCSEC_DeviceMotion_states_ENUMTYPE VCSEC_Device_Motion_State
#define VCSEC_DeviceMotion_confidence_ENUMTYPE VCSEC_Device_Motion_Confidence


#define VCSEC_FromVCSECMessage_sub_message_genealogyRequest_ENUMTYPE VCSEC_GenealogyRequest_E
#define VCSEC_FromVCSECMessage_sub_message_imuRequest_ENUMTYPE VCSEC_IMURequest_E
#define VCSEC_FromVCSECMessage_sub_message_nfcseRequest_ENUMTYPE VCSEC_NFCSERequest_E
#define VCSEC_FromVCSECMessage_sub_message_TPDataRequest_ENUMTYPE VCSEC_TPDataRequest_E
#define VCSEC_FromVCSECMessage_sub_message_resetTrackerCommand_ENUMTYPE VCSEC_ResetTrackerCommand_E
#define VCSEC_FromVCSECMessage_sub_message_TPNotifyTrackerCommand_ENUMTYPE VCSEC_TPNotifyTrackerCommand_E
#define VCSEC_FromVCSECMessage_sub_message_rciControl_ENUMTYPE VCSEC_RCI_control_E
#define VCSEC_FromVCSECMessage_sub_message_appDeviceInfoRequest_ENUMTYPE VCSEC_AppDeviceInfoRequest_E


#define VCSEC_GenealogyResponse_status_ENUMTYPE VCSEC_GenealogyStatus_E

#define VCSEC_GetCodeDescriptor_location_ENUMTYPE VCSEC_UpdaterLocation

#define VCSEC_GetReaderKey_command_ENUMTYPE VCSEC_GetReaderKeyCommand


#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_authenticationLevel_ENUMTYPE VCSEC_AuthenticationLevel_E

#define VCSEC_InformationRequest_informationRequestType_ENUMTYPE VCSEC_InformationRequestType




#define VCSEC_KeyMetadata_keyFormFactor_ENUMTYPE VCSEC_KeyFormFactor

#define VCSEC_KeyStatus_nfcPresence_ENUMTYPE VCSEC_NFCPresence
#define VCSEC_KeyStatus_blePresence_ENUMTYPE VCSEC_BLEPresence
#define VCSEC_KeyStatus_keyFormFactor_ENUMTYPE VCSEC_KeyFormFactor




#define VCSEC_MISessionResponse_sub_message_errorCode_ENUMTYPE VCSEC_MIError_E



#define VCSEC_NFCSEState_devicePubKeyState_ENUMTYPE VCSEC_NFCSEDevicePubKeyState_E
#define VCSEC_NFCSEState_vehiclePubKeyState_ENUMTYPE VCSEC_NFCSEVehiclePubKeyState_E
#define VCSEC_NFCSEState_sharedSecretState_ENUMTYPE VCSEC_NFCSESharedSecretState_E
#define VCSEC_NFCSEState_insecureCommandState_ENUMTYPE VCSEC_NFCSEInsecureCommandState_E

#define VCSEC_NominalError_genericError_ENUMTYPE VCSEC_GenericError_E

#define VCSEC_PermissionChange_permission_ENUMTYPE VCSEC_WhitelistKeyPermission_E
#define VCSEC_PermissionChange_keyRole_ENUMTYPE VCSEC_Role




#define VCSEC_ReplaceKey_keyRole_ENUMTYPE VCSEC_Role




#define VCSEC_SetUpdaterLocation_updaterLocation_ENUMTYPE VCSEC_UpdaterLocation


#define VCSEC_Signatures_SessionInfo_status_ENUMTYPE VCSEC_Session_Info_Status

#define VCSEC_SignedMessage_signatureType_ENUMTYPE VCSEC_SignatureType

#define VCSEC_SignedMessage_status_signedMessageInformation_ENUMTYPE VCSEC_SignedMessage_information_E

#define VCSEC_SleepManagerRequest_sub_message_sleepManagerCommand_ENUMTYPE VCSEC_SleepManagerCommand_E

#define VCSEC_SleepManagerStats_isBLETrimApplied_ENUMTYPE VCSEC_BLEAdditionalTRIMApplied_E




#define VCSEC_TPAdv_TPNotifyReason_ENUMTYPE VCSEC_TPNotifyReason_E
#define VCSEC_TPAdv_TPMSAdvType_ENUMTYPE VCSEC_TPMSAdvType_E


#define VCSEC_TPLRDetection_LRDetectionResult_ENUMTYPE VCSEC_LRDetectionResult_E

#define VCSEC_TPMotionConfig_PTMeasurePeriod_ENUMTYPE VCSEC_MLXWakePeriod_E




#define VCSEC_TPStationaryConfig_accelMeasurePeriod_ENUMTYPE VCSEC_MLXWakePeriod_E


#define VCSEC_UnknownKeyInfo_keyFormFactor_ENUMTYPE VCSEC_KeyFormFactor


#define VCSEC_UnsignedMessage_sub_message_RKEAction_ENUMTYPE VCSEC_RKEAction_E
#define VCSEC_UnsignedMessage_sub_message_IMUState_ENUMTYPE VCSEC_IMUState_E
#define VCSEC_UnsignedMessage_sub_message_deviceActivity_ENUMTYPE VCSEC_Activity_E



#define VCSEC_UpdaterStatus_statusCode_ENUMTYPE VCSEC_UpdaterStatusCode
#define VCSEC_UpdaterStatus_location_ENUMTYPE VCSEC_UpdaterLocation


#define VCSEC_VehicleStatus_vehicleLockState_ENUMTYPE VCSEC_VehicleLockState_E
#define VCSEC_VehicleStatus_vehicleSleepStatus_ENUMTYPE VCSEC_VehicleSleepStatus_E


#define VCSEC_WhitelistEntryInfo_permissions_ENUMTYPE VCSEC_WhitelistKeyPermission_E
#define VCSEC_WhitelistEntryInfo_keyRole_ENUMTYPE VCSEC_Role



#define VCSEC_WhitelistOperation_status_whitelistOperationInformation_ENUMTYPE VCSEC_WhitelistOperation_information_E
#define VCSEC_WhitelistOperation_status_operationStatus_ENUMTYPE VCSEC_OperationStatus_E


/* Initializer values for message structs */
#define VCSEC_AccelData_init_default             {0, 0}
#define VCSEC_ActiveKey_init_default             {false, VCSEC_KeyIdentifier_init_default}
#define VCSEC_Alert_init_default                 {0, {VCSEC_AlertHandlePulledWithoutAuth_init_default}}
#define VCSEC_AlertHandlePulledWithoutAuth_init_default {0, _VCSEC_HandlePulled_E_MIN, 0, 0, 0, {{NULL}, NULL}}
#define VCSEC_AppDeviceInfo_init_default         {{{NULL}, NULL}, _VCSEC_AppOperatingSystem_MIN, _VCSEC_UWBAvailability_MIN}
#define VCSEC_AuthenticationRequest_init_default {false, VCSEC_AuthenticationRequestToken_init_default, _VCSEC_AuthenticationLevel_E_MIN, {{NULL}, NULL}}
#define VCSEC_AuthenticationRequestToken_init_default {{{NULL}, NULL}}
#define VCSEC_AuthenticationResponse_init_default {_VCSEC_AuthenticationLevel_E_MIN, 0, _VCSEC_AuthenticationRejection_E_MIN}
#define VCSEC_BLEConfig_init_default             {0, {0}}
#define VCSEC_BLEConfigAll_init_default          {0, 0}
#define VCSEC_BLEConfigCommand_init_default      {_VCSEC_BLEConfigCommandType_E_MIN, false, VCSEC_BLEConfig_init_default}
#define VCSEC_Capabilities_init_default          {0, 0}
#define VCSEC_ClosureMoveRequest_init_default    {_VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN}
#define VCSEC_ClosureStatuses_init_default       {_VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN}
#define VCSEC_CodeDescriptor_init_default        {_VCSEC_UpdaterLocation_MIN, 0, {{NULL}, NULL}}
#define VCSEC_CommandStatus_init_default         {_VCSEC_OperationStatus_E_MIN, 0, {VCSEC_SignedMessage_status_init_default}}
#define VCSEC_ConnectionMetrics_init_default     {0, 0, 0}
#define VCSEC_DelaySleepRequest_init_default     {0}
#define VCSEC_DeviceMotion_init_default          {{{NULL}, NULL}, _VCSEC_Device_Motion_Confidence_MIN}
#define VCSEC_FromRCI_init_default               {{{NULL}, NULL}}
#define VCSEC_FromVCSECMessage_init_default      {0, {VCSEC_VehicleStatus_init_default}}
#define VCSEC_Genealogy_init_default             {{{NULL}, NULL}, {{NULL}, NULL}}
#define VCSEC_GenealogyResponse_init_default     {false, VCSEC_Genealogy_init_default, _VCSEC_GenealogyStatus_E_MIN}
#define VCSEC_GetCodeDescriptor_init_default     {_VCSEC_UpdaterLocation_MIN}
#define VCSEC_GetReaderKey_init_default          {_VCSEC_GetReaderKeyCommand_MIN}
#define VCSEC_GetSessionInfoRequest_init_default {false, VCSEC_KeyIdentity_init_default}
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_init_default {0, _VCSEC_AuthenticationLevel_E_MIN, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define VCSEC_InformationRequest_init_default    {_VCSEC_InformationRequestType_MIN, 0, {VCSEC_KeyIdentifier_init_default}}
#define VCSEC_KeyfobInfo_init_default            {{{NULL}, NULL}, 0, 0}
#define VCSEC_KeyIdentifier_init_default         {{0}}
#define VCSEC_KeyIdentity_init_default           {0, {{{NULL}, NULL}}}
#define VCSEC_KeyMetadata_init_default           {_VCSEC_KeyFormFactor_MIN}
#define VCSEC_KeyStatus_init_default             {false, VCSEC_KeyIdentifier_init_default, _VCSEC_NFCPresence_MIN, _VCSEC_BLEPresence_MIN, false, VCSEC_PublicKey_init_default, _VCSEC_KeyFormFactor_MIN, 0}
#define VCSEC_KeyStatusInfo_init_default         {{{NULL}, NULL}}
#define VCSEC_MIConfigurationData_init_default   {{{NULL}, NULL}}
#define VCSEC_MISessionRequest_init_default      {0, {{NULL}, NULL}}
#define VCSEC_MISessionResponse_init_default     {0, 0, {VCSEC_MIConfigurationData_init_default}}
#define VCSEC_MISessionStop_init_default         {0, {0}}
#define VCSEC_MISessionStopped_init_default      {0, {0}}
#define VCSEC_NFCSEState_init_default            {_VCSEC_NFCSEDevicePubKeyState_E_MIN, _VCSEC_NFCSEVehiclePubKeyState_E_MIN, _VCSEC_NFCSESharedSecretState_E_MIN, _VCSEC_NFCSEInsecureCommandState_E_MIN, false, VCSEC_PublicKey_init_default}
#define VCSEC_NominalError_init_default          {_VCSEC_GenericError_E_MIN}
#define VCSEC_PermissionChange_init_default      {false, VCSEC_PublicKey_init_default, 0, {_VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN}, 0, _VCSEC_Role_MIN}
#define VCSEC_PersonalizationInformation_init_default {{{NULL}, NULL}}
#define VCSEC_PublicKey_init_default             {{0, {0}}}
#define VCSEC_RCISignature_init_default          {{{NULL}, NULL}, {{NULL}, NULL}}
#define VCSEC_ReplaceKey_init_default            {0, {VCSEC_PublicKey_init_default}, false, VCSEC_PublicKey_init_default, _VCSEC_Role_MIN, 0}
#define VCSEC_ResetTrackerStats_init_default     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define VCSEC_SessionInfo_init_default           {{{NULL}, NULL}, 0, {0, {0}}}
#define VCSEC_SetTPConfigration_init_default     {false, VCSEC_TPStationaryConfig_init_default, false, VCSEC_TPMotionConfig_init_default}
#define VCSEC_SetUpdaterLocation_init_default    {_VCSEC_UpdaterLocation_MIN}
#define VCSEC_Signatures_init_default            {0}
#define VCSEC_Signatures_SessionInfo_init_default {0, {{NULL}, NULL}, {{NULL}, NULL}, 0, _VCSEC_Session_Info_Status_MIN}
#define VCSEC_SignedMessage_init_default         {{{NULL}, NULL}, {0, {0}}, _VCSEC_SignatureType_MIN, {0, {0}}, {0, {0}}, 0}
#define VCSEC_SignedMessage_status_init_default  {0, _VCSEC_SignedMessage_information_E_MIN}
#define VCSEC_SleepManagerRequest_init_default   {0, {VCSEC_DelaySleepRequest_init_default}}
#define VCSEC_SleepManagerStats_init_default     {0, 0, _VCSEC_BLEAdditionalTRIMApplied_E_MIN}
#define VCSEC_StageBlock_init_default            {0, {{NULL}, NULL}}
#define VCSEC_ToRCI_init_default                 {{{NULL}, NULL}, 0, {{{NULL}, NULL}}}
#define VCSEC_ToVCSECMessage_init_default        {0, {VCSEC_SignedMessage_init_default}}
#define VCSEC_TPAdv_init_default                 {0, 0, _VCSEC_TPNotifyReason_E_MIN, 0, 0, _VCSEC_TPMSAdvType_E_MIN}
#define VCSEC_TPData_init_default                {0, 0}
#define VCSEC_TPLRDetection_init_default         {_VCSEC_LRDetectionResult_E_MIN, 0, 0, 0, 0, 0}
#define VCSEC_TPMotionConfig_init_default        {0, 0, _VCSEC_MLXWakePeriod_E_MIN}
#define VCSEC_TPMSAlarms_init_default            {0, 0, 0, 0, 0, 0}
#define VCSEC_TPNewSensorData_init_default       {false, VCSEC_PublicKey_init_default}
#define VCSEC_TPNotifyTrackerStats_init_default  {0, 0, 0, 0, 0, 0, 0}
#define VCSEC_TPStationaryConfig_init_default    {0, 0, _VCSEC_MLXWakePeriod_E_MIN, 0, 0}
#define VCSEC_TPWheelUnitInfo_init_default       {{{NULL}, NULL}, {{NULL}, NULL}, 0}
#define VCSEC_UnknownKeyInfo_init_default        {false, VCSEC_KeyStatus_init_default, false, VCSEC_PublicKey_init_default, _VCSEC_KeyFormFactor_MIN}
#define VCSEC_UnsecureNotification_init_default  {0, false, VCSEC_ClosureStatuses_init_default}
#define VCSEC_UnsignedMessage_init_default       {0, {VCSEC_InformationRequest_init_default}, false, VCSEC_PersonalizationInformation_init_default}
#define VCSEC_UpdaterCommand_init_default        {0, {VCSEC_GetCodeDescriptor_init_default}}
#define VCSEC_UpdaterResponse_init_default       {0, {VCSEC_CodeDescriptor_init_default}}
#define VCSEC_UpdaterStatus_init_default         {_VCSEC_UpdaterStatusCode_MIN, _VCSEC_UpdaterLocation_MIN, 0}
#define VCSEC_VehicleInfo_init_default           {{{NULL}, NULL}}
#define VCSEC_VehicleStatus_init_default         {false, VCSEC_ClosureStatuses_init_default, _VCSEC_VehicleLockState_E_MIN, _VCSEC_VehicleSleepStatus_E_MIN}
#define VCSEC_VerifyAndInstallApp_init_default   {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define VCSEC_WhitelistEntryInfo_init_default    {false, VCSEC_KeyIdentifier_init_default, false, VCSEC_PublicKey_init_default, {{NULL}, NULL}, false, VCSEC_KeyMetadata_init_default, 0, 0, _VCSEC_Role_MIN}
#define VCSEC_WhitelistInfo_init_default         {0, 0, {VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default, VCSEC_KeyIdentifier_init_default}, 0}
#define VCSEC_WhitelistOperation_init_default    {0, {VCSEC_PublicKey_init_default}, false, VCSEC_KeyMetadata_init_default}
#define VCSEC_WhitelistOperation_status_init_default {_VCSEC_WhitelistOperation_information_E_MIN, false, VCSEC_KeyIdentifier_init_default, _VCSEC_OperationStatus_E_MIN}
#define VCSEC_AccelData_init_zero                {0, 0}
#define VCSEC_ActiveKey_init_zero                {false, VCSEC_KeyIdentifier_init_zero}
#define VCSEC_Alert_init_zero                    {0, {VCSEC_AlertHandlePulledWithoutAuth_init_zero}}
#define VCSEC_AlertHandlePulledWithoutAuth_init_zero {0, _VCSEC_HandlePulled_E_MIN, 0, 0, 0, {{NULL}, NULL}}
#define VCSEC_AppDeviceInfo_init_zero            {{{NULL}, NULL}, _VCSEC_AppOperatingSystem_MIN, _VCSEC_UWBAvailability_MIN}
#define VCSEC_AuthenticationRequest_init_zero    {false, VCSEC_AuthenticationRequestToken_init_zero, _VCSEC_AuthenticationLevel_E_MIN, {{NULL}, NULL}}
#define VCSEC_AuthenticationRequestToken_init_zero {{{NULL}, NULL}}
#define VCSEC_AuthenticationResponse_init_zero   {_VCSEC_AuthenticationLevel_E_MIN, 0, _VCSEC_AuthenticationRejection_E_MIN}
#define VCSEC_BLEConfig_init_zero                {0, {0}}
#define VCSEC_BLEConfigAll_init_zero             {0, 0}
#define VCSEC_BLEConfigCommand_init_zero         {_VCSEC_BLEConfigCommandType_E_MIN, false, VCSEC_BLEConfig_init_zero}
#define VCSEC_Capabilities_init_zero             {0, 0}
#define VCSEC_ClosureMoveRequest_init_zero       {_VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN, _VCSEC_ClosureMoveType_E_MIN}
#define VCSEC_ClosureStatuses_init_zero          {_VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN, _VCSEC_ClosureState_E_MIN}
#define VCSEC_CodeDescriptor_init_zero           {_VCSEC_UpdaterLocation_MIN, 0, {{NULL}, NULL}}
#define VCSEC_CommandStatus_init_zero            {_VCSEC_OperationStatus_E_MIN, 0, {VCSEC_SignedMessage_status_init_zero}}
#define VCSEC_ConnectionMetrics_init_zero        {0, 0, 0}
#define VCSEC_DelaySleepRequest_init_zero        {0}
#define VCSEC_DeviceMotion_init_zero             {{{NULL}, NULL}, _VCSEC_Device_Motion_Confidence_MIN}
#define VCSEC_FromRCI_init_zero                  {{{NULL}, NULL}}
#define VCSEC_FromVCSECMessage_init_zero         {0, {VCSEC_VehicleStatus_init_zero}}
#define VCSEC_Genealogy_init_zero                {{{NULL}, NULL}, {{NULL}, NULL}}
#define VCSEC_GenealogyResponse_init_zero        {false, VCSEC_Genealogy_init_zero, _VCSEC_GenealogyStatus_E_MIN}
#define VCSEC_GetCodeDescriptor_init_zero        {_VCSEC_UpdaterLocation_MIN}
#define VCSEC_GetReaderKey_init_zero             {_VCSEC_GetReaderKeyCommand_MIN}
#define VCSEC_GetSessionInfoRequest_init_zero    {false, VCSEC_KeyIdentity_init_zero}
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_init_zero {0, _VCSEC_AuthenticationLevel_E_MIN, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define VCSEC_InformationRequest_init_zero       {_VCSEC_InformationRequestType_MIN, 0, {VCSEC_KeyIdentifier_init_zero}}
#define VCSEC_KeyfobInfo_init_zero               {{{NULL}, NULL}, 0, 0}
#define VCSEC_KeyIdentifier_init_zero            {{0}}
#define VCSEC_KeyIdentity_init_zero              {0, {{{NULL}, NULL}}}
#define VCSEC_KeyMetadata_init_zero              {_VCSEC_KeyFormFactor_MIN}
#define VCSEC_KeyStatus_init_zero                {false, VCSEC_KeyIdentifier_init_zero, _VCSEC_NFCPresence_MIN, _VCSEC_BLEPresence_MIN, false, VCSEC_PublicKey_init_zero, _VCSEC_KeyFormFactor_MIN, 0}
#define VCSEC_KeyStatusInfo_init_zero            {{{NULL}, NULL}}
#define VCSEC_MIConfigurationData_init_zero      {{{NULL}, NULL}}
#define VCSEC_MISessionRequest_init_zero         {0, {{NULL}, NULL}}
#define VCSEC_MISessionResponse_init_zero        {0, 0, {VCSEC_MIConfigurationData_init_zero}}
#define VCSEC_MISessionStop_init_zero            {0, {0}}
#define VCSEC_MISessionStopped_init_zero         {0, {0}}
#define VCSEC_NFCSEState_init_zero               {_VCSEC_NFCSEDevicePubKeyState_E_MIN, _VCSEC_NFCSEVehiclePubKeyState_E_MIN, _VCSEC_NFCSESharedSecretState_E_MIN, _VCSEC_NFCSEInsecureCommandState_E_MIN, false, VCSEC_PublicKey_init_zero}
#define VCSEC_NominalError_init_zero             {_VCSEC_GenericError_E_MIN}
#define VCSEC_PermissionChange_init_zero         {false, VCSEC_PublicKey_init_zero, 0, {_VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN, _VCSEC_WhitelistKeyPermission_E_MIN}, 0, _VCSEC_Role_MIN}
#define VCSEC_PersonalizationInformation_init_zero {{{NULL}, NULL}}
#define VCSEC_PublicKey_init_zero                {{0, {0}}}
#define VCSEC_RCISignature_init_zero             {{{NULL}, NULL}, {{NULL}, NULL}}
#define VCSEC_ReplaceKey_init_zero               {0, {VCSEC_PublicKey_init_zero}, false, VCSEC_PublicKey_init_zero, _VCSEC_Role_MIN, 0}
#define VCSEC_ResetTrackerStats_init_zero        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define VCSEC_SessionInfo_init_zero              {{{NULL}, NULL}, 0, {0, {0}}}
#define VCSEC_SetTPConfigration_init_zero        {false, VCSEC_TPStationaryConfig_init_zero, false, VCSEC_TPMotionConfig_init_zero}
#define VCSEC_SetUpdaterLocation_init_zero       {_VCSEC_UpdaterLocation_MIN}
#define VCSEC_Signatures_init_zero               {0}
#define VCSEC_Signatures_SessionInfo_init_zero   {0, {{NULL}, NULL}, {{NULL}, NULL}, 0, _VCSEC_Session_Info_Status_MIN}
#define VCSEC_SignedMessage_init_zero            {{{NULL}, NULL}, {0, {0}}, _VCSEC_SignatureType_MIN, {0, {0}}, {0, {0}}, 0}
#define VCSEC_SignedMessage_status_init_zero     {0, _VCSEC_SignedMessage_information_E_MIN}
#define VCSEC_SleepManagerRequest_init_zero      {0, {VCSEC_DelaySleepRequest_init_zero}}
#define VCSEC_SleepManagerStats_init_zero        {0, 0, _VCSEC_BLEAdditionalTRIMApplied_E_MIN}
#define VCSEC_StageBlock_init_zero               {0, {{NULL}, NULL}}
#define VCSEC_ToRCI_init_zero                    {{{NULL}, NULL}, 0, {{{NULL}, NULL}}}
#define VCSEC_ToVCSECMessage_init_zero           {0, {VCSEC_SignedMessage_init_zero}}
#define VCSEC_TPAdv_init_zero                    {0, 0, _VCSEC_TPNotifyReason_E_MIN, 0, 0, _VCSEC_TPMSAdvType_E_MIN}
#define VCSEC_TPData_init_zero                   {0, 0}
#define VCSEC_TPLRDetection_init_zero            {_VCSEC_LRDetectionResult_E_MIN, 0, 0, 0, 0, 0}
#define VCSEC_TPMotionConfig_init_zero           {0, 0, _VCSEC_MLXWakePeriod_E_MIN}
#define VCSEC_TPMSAlarms_init_zero               {0, 0, 0, 0, 0, 0}
#define VCSEC_TPNewSensorData_init_zero          {false, VCSEC_PublicKey_init_zero}
#define VCSEC_TPNotifyTrackerStats_init_zero     {0, 0, 0, 0, 0, 0, 0}
#define VCSEC_TPStationaryConfig_init_zero       {0, 0, _VCSEC_MLXWakePeriod_E_MIN, 0, 0}
#define VCSEC_TPWheelUnitInfo_init_zero          {{{NULL}, NULL}, {{NULL}, NULL}, 0}
#define VCSEC_UnknownKeyInfo_init_zero           {false, VCSEC_KeyStatus_init_zero, false, VCSEC_PublicKey_init_zero, _VCSEC_KeyFormFactor_MIN}
#define VCSEC_UnsecureNotification_init_zero     {0, false, VCSEC_ClosureStatuses_init_zero}
#define VCSEC_UnsignedMessage_init_zero          {0, {VCSEC_InformationRequest_init_zero}, false, VCSEC_PersonalizationInformation_init_zero}
#define VCSEC_UpdaterCommand_init_zero           {0, {VCSEC_GetCodeDescriptor_init_zero}}
#define VCSEC_UpdaterResponse_init_zero          {0, {VCSEC_CodeDescriptor_init_zero}}
#define VCSEC_UpdaterStatus_init_zero            {_VCSEC_UpdaterStatusCode_MIN, _VCSEC_UpdaterLocation_MIN, 0}
#define VCSEC_VehicleInfo_init_zero              {{{NULL}, NULL}}
#define VCSEC_VehicleStatus_init_zero            {false, VCSEC_ClosureStatuses_init_zero, _VCSEC_VehicleLockState_E_MIN, _VCSEC_VehicleSleepStatus_E_MIN}
#define VCSEC_VerifyAndInstallApp_init_zero      {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define VCSEC_WhitelistEntryInfo_init_zero       {false, VCSEC_KeyIdentifier_init_zero, false, VCSEC_PublicKey_init_zero, {{NULL}, NULL}, false, VCSEC_KeyMetadata_init_zero, 0, 0, _VCSEC_Role_MIN}
#define VCSEC_WhitelistInfo_init_zero            {0, 0, {VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero, VCSEC_KeyIdentifier_init_zero}, 0}
#define VCSEC_WhitelistOperation_init_zero       {0, {VCSEC_PublicKey_init_zero}, false, VCSEC_KeyMetadata_init_zero}
#define VCSEC_WhitelistOperation_status_init_zero {_VCSEC_WhitelistOperation_information_E_MIN, false, VCSEC_KeyIdentifier_init_zero, _VCSEC_OperationStatus_E_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define VCSEC_AccelData_xAccel_g_tag             1
#define VCSEC_AccelData_zAccel_g_tag             2
#define VCSEC_AlertHandlePulledWithoutAuth_timeSinceAlertSet_ms_tag 1
#define VCSEC_AlertHandlePulledWithoutAuth_handlePulled_tag 2
#define VCSEC_AlertHandlePulledWithoutAuth_connectionCount_tag 3
#define VCSEC_AlertHandlePulledWithoutAuth_unknownDevicePresent_tag 4
#define VCSEC_AlertHandlePulledWithoutAuth_authRequested_tag 5
#define VCSEC_AlertHandlePulledWithoutAuth_deviceSpecificPayload_tag 6
#define VCSEC_Alert_alertHandlePulledWithoutAuth_tag 1
#define VCSEC_AppDeviceInfo_hardware_model_sha256_tag 1
#define VCSEC_AppDeviceInfo_os_tag               2
#define VCSEC_AppDeviceInfo_UWBAvailable_tag     3
#define VCSEC_AuthenticationRequestToken_token_tag 1
#define VCSEC_AuthenticationRequest_sessionInfo_tag 2
#define VCSEC_AuthenticationRequest_requestedLevel_tag 3
#define VCSEC_AuthenticationRequest_reasonsForAuth_tag 4
#define VCSEC_AuthenticationResponse_authenticationLevel_tag 1
#define VCSEC_AuthenticationResponse_estimatedDistance_tag 2
#define VCSEC_AuthenticationResponse_authenticationRejection_tag 3
#define VCSEC_BLEConfig_ADVInterval_tag          1
#define VCSEC_BLEConfig_sleepClockAccuracy_tag   2
#define VCSEC_BLEConfigAll_ADVInterval_tag       1
#define VCSEC_BLEConfigAll_sleepClockAccuracy_tag 2
#define VCSEC_BLEConfigCommand_BLEConfigCommandType_tag 1
#define VCSEC_BLEConfigCommand_BLEConfig_tag     2
#define VCSEC_Capabilities_chargePortOpen_tag    1
#define VCSEC_Capabilities_chargePortClose_tag   2
#define VCSEC_ClosureMoveRequest_frontDriverDoor_tag 1
#define VCSEC_ClosureMoveRequest_frontPassengerDoor_tag 2
#define VCSEC_ClosureMoveRequest_rearDriverDoor_tag 3
#define VCSEC_ClosureMoveRequest_rearPassengerDoor_tag 4
#define VCSEC_ClosureMoveRequest_rearTrunk_tag   5
#define VCSEC_ClosureMoveRequest_frontTrunk_tag  6
#define VCSEC_ClosureMoveRequest_chargePort_tag  7
#define VCSEC_ClosureStatuses_frontDriverDoor_tag 1
#define VCSEC_ClosureStatuses_frontPassengerDoor_tag 2
#define VCSEC_ClosureStatuses_rearDriverDoor_tag 3
#define VCSEC_ClosureStatuses_rearPassengerDoor_tag 4
#define VCSEC_ClosureStatuses_rearTrunk_tag      5
#define VCSEC_ClosureStatuses_frontTrunk_tag     6
#define VCSEC_ClosureStatuses_chargePort_tag     7
#define VCSEC_CodeDescriptor_codeDescriptorLocation_tag 1
#define VCSEC_CodeDescriptor_version_tag         2
#define VCSEC_CodeDescriptor_codeDescriptorBytes_tag 3
#define VCSEC_ConnectionMetrics_goodConnEventCount_tag 1
#define VCSEC_ConnectionMetrics_missedConnEventCount_tag 2
#define VCSEC_ConnectionMetrics_badCRCConnEventCount_tag 3
#define VCSEC_DelaySleepRequest_delayTime_ms_tag 1
#define VCSEC_DeviceMotion_states_tag            1
#define VCSEC_DeviceMotion_confidence_tag        2
#define VCSEC_FromRCI_response_tag               1
#define VCSEC_Genealogy_serialNumber_tag         1
#define VCSEC_Genealogy_partNumber_tag           2
#define VCSEC_GenealogyResponse_currentGenealogy_tag 1
#define VCSEC_GenealogyResponse_status_tag       2
#define VCSEC_GetCodeDescriptor_location_tag     1
#define VCSEC_GetReaderKey_command_tag           1
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_keyChannel_tag 1
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_authenticationLevel_tag 2
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_present_tag 3
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_RSSILeft_tag 4
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_RSSIRight_tag 5
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_RSSIRear_tag 6
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_RSSICenter_tag 7
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_RSSIFront_tag 8
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_RSSISecondary_tag 9
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_RSSINFCCradle_tag 10
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_RSSIRearLeft_tag 11
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_RSSIRearRight_tag 12
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_highThreshLeftPresent_tag 13
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_highThreshRightPresent_tag 14
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_highThreshCenterPresent_tag 15
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_highThreshFrontPresent_tag 16
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_highThreshRearPresent_tag 17
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_highThreshRearLeftPresent_tag 18
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_highThreshRearRightPresent_tag 19
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_highThreshSecondaryPresent_tag 20
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_highThreshNFCPresent_tag 21
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_sortedDeltaBayesLeftPresent_tag 22
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_sortedDeltaBayesRightPresent_tag 23
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_rawDeltaBayesLeftPresent_tag 24
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_rawDeltaBayesRightPresent_tag 25
#define VCSEC_KeyfobInfo_appCRC_tag              1
#define VCSEC_KeyfobInfo_batteryVoltage_mV_tag   2
#define VCSEC_KeyfobInfo_temperature_degreesC_tag 3
#define VCSEC_KeyIdentifier_publicKeySHA1_tag    1
#define VCSEC_ActiveKey_activeKey_tag            1
#define VCSEC_InformationRequest_informationRequestType_tag 1
#define VCSEC_InformationRequest_keyId_tag       2
#define VCSEC_InformationRequest_publicKey_tag   3
#define VCSEC_InformationRequest_slot_tag        4
#define VCSEC_KeyIdentity_public_key_tag         1
#define VCSEC_KeyIdentity_key_id_tag             2
#define VCSEC_GetSessionInfoRequest_key_identity_tag 1
#define VCSEC_KeyMetadata_keyFormFactor_tag      1
#define VCSEC_KeyStatusInfo_keyStatuses_tag      1
#define VCSEC_MIConfigurationData_data__tag      1
#define VCSEC_MISessionRequest_sessionId_tag     1
#define VCSEC_MISessionRequest_accessoryConfigurationData_tag 2
#define VCSEC_MISessionResponse_sessionId_tag    1
#define VCSEC_MISessionResponse_MIConfigurationData_tag 2
#define VCSEC_MISessionResponse_errorCode_tag    3
#define VCSEC_MISessionStop_sessionId_tag        1
#define VCSEC_MISessionStopped_sessionId_tag     1
#define VCSEC_NominalError_genericError_tag      1
#define VCSEC_PersonalizationInformation_VIN_tag 1
#define VCSEC_PublicKey_PublicKeyRaw_tag         1
#define VCSEC_KeyStatus_keyId_tag                1
#define VCSEC_KeyStatus_nfcPresence_tag          2
#define VCSEC_KeyStatus_blePresence_tag          3
#define VCSEC_KeyStatus_publicKey_tag            4
#define VCSEC_KeyStatus_keyFormFactor_tag        5
#define VCSEC_KeyStatus_slot_tag                 6
#define VCSEC_NFCSEState_devicePubKeyState_tag   1
#define VCSEC_NFCSEState_vehiclePubKeyState_tag  2
#define VCSEC_NFCSEState_sharedSecretState_tag   3
#define VCSEC_NFCSEState_insecureCommandState_tag 4
#define VCSEC_NFCSEState_vehiclePubKey_tag       5
#define VCSEC_PermissionChange_key_tag           1
#define VCSEC_PermissionChange_permission_tag    2
#define VCSEC_PermissionChange_secondsToBeActive_tag 3
#define VCSEC_PermissionChange_keyRole_tag       4
#define VCSEC_RCISignature_nonce_tag             1
#define VCSEC_RCISignature_tag_tag               2
#define VCSEC_ReplaceKey_publicKeyToReplace_tag  1
#define VCSEC_ReplaceKey_slotToReplace_tag       2
#define VCSEC_ReplaceKey_keyToAdd_tag            3
#define VCSEC_ReplaceKey_keyRole_tag             4
#define VCSEC_ReplaceKey_impermanent_tag         5
#define VCSEC_ResetTrackerStats_totalResetsDueToPowerOn_tag 1
#define VCSEC_ResetTrackerStats_totalResetsDueToPinReset_tag 2
#define VCSEC_ResetTrackerStats_totalResetsDueToVDDSLoss_tag 3
#define VCSEC_ResetTrackerStats_totalResetsDueToVDDLoss_tag 4
#define VCSEC_ResetTrackerStats_totalResetsDueToVDDRLoss_tag 5
#define VCSEC_ResetTrackerStats_totalResetsDueToClockLoss_tag 6
#define VCSEC_ResetTrackerStats_totalResetsDueToSystemReset_tag 7
#define VCSEC_ResetTrackerStats_totalResetsDueToWarmReset_tag 8
#define VCSEC_ResetTrackerStats_totalResetsDueToWakeupFromShutdown_tag 9
#define VCSEC_ResetTrackerStats_totalResetsDueToWakeupFromTCKNoise_tag 10
#define VCSEC_SessionInfo_token_tag              1
#define VCSEC_SessionInfo_counter_tag            2
#define VCSEC_SessionInfo_publicKey_tag          3
#define VCSEC_SetUpdaterLocation_updaterLocation_tag 1
#define VCSEC_Signatures_SessionInfo_counter_tag 1
#define VCSEC_Signatures_SessionInfo_publicKey_tag 2
#define VCSEC_Signatures_SessionInfo_epoch_tag   3
#define VCSEC_Signatures_SessionInfo_clock_time_tag 4
#define VCSEC_Signatures_SessionInfo_status_tag  5
#define VCSEC_SignedMessage_token_tag            1
#define VCSEC_SignedMessage_protobufMessageAsBytes_tag 2
#define VCSEC_SignedMessage_signatureType_tag    3
#define VCSEC_SignedMessage_signature_tag        4
#define VCSEC_SignedMessage_keyId_tag            5
#define VCSEC_SignedMessage_counter_tag          6
#define VCSEC_SignedMessage_status_counter_tag   1
#define VCSEC_SignedMessage_status_signedMessageInformation_tag 2
#define VCSEC_SleepManagerRequest_delaySleepRequest_tag 1
#define VCSEC_SleepManagerRequest_sleepManagerCommand_tag 2
#define VCSEC_SleepManagerStats_totalCPUTime_tag 1
#define VCSEC_SleepManagerStats_totalAwakeTime_tag 2
#define VCSEC_SleepManagerStats_isBLETrimApplied_tag 3
#define VCSEC_StageBlock_blockAddress_tag        1
#define VCSEC_StageBlock_blockToStage_tag        2
#define VCSEC_ToRCI_command_tag                  1
#define VCSEC_ToRCI_HMAC_signature_tag           2
#define VCSEC_ToRCI_rci_signature_tag            3
#define VCSEC_TPAdv_pressure_tag                 1
#define VCSEC_TPAdv_temperature_tag              2
#define VCSEC_TPAdv_TPNotifyReason_tag           3
#define VCSEC_TPAdv_batteryVoltage_mV_tag        4
#define VCSEC_TPAdv_advertismentCount_tag        5
#define VCSEC_TPAdv_TPMSAdvType_tag              6
#define VCSEC_TPData_pressure_tag                1
#define VCSEC_TPData_temperature_tag             2
#define VCSEC_TPLRDetection_LRDetectionResult_tag 1
#define VCSEC_TPLRDetection_totalPeriod_ms_tag   2
#define VCSEC_TPLRDetection_x90degCnt_tag        3
#define VCSEC_TPLRDetection_x270degCnt_tag       4
#define VCSEC_TPLRDetection_zAcceleration_dg_tag 5
#define VCSEC_TPLRDetection_zAccelDiffCnt_tag    6
#define VCSEC_TPMotionConfig_pressureDelta_tag   1
#define VCSEC_TPMotionConfig_temperatureDelta_tag 2
#define VCSEC_TPMotionConfig_PTMeasurePeriod_tag 3
#define VCSEC_TPMSAlarms_pressure_tag            1
#define VCSEC_TPMSAlarms_temperature_tag         2
#define VCSEC_TPMSAlarms_acceleration_tag        3
#define VCSEC_TPMSAlarms_voltage_tag             4
#define VCSEC_TPMSAlarms_LFDetect_tag            5
#define VCSEC_TPMSAlarms_wheelMotion_tag         6
#define VCSEC_TPNewSensorData_sensorPublicKey_tag 1
#define VCSEC_TPNotifyTrackerStats_notifyReasonUnknownCount_tag 1
#define VCSEC_TPNotifyTrackerStats_notifyReasonLowPressureCount_tag 2
#define VCSEC_TPNotifyTrackerStats_notifyReasonPTValueUpdateCount_tag 3
#define VCSEC_TPNotifyTrackerStats_notifyReasonWheelMovingCount_tag 4
#define VCSEC_TPNotifyTrackerStats_notifyReasonWheelRotationDirectionReadyCount_tag 5
#define VCSEC_TPNotifyTrackerStats_notifyReasonLFCount_tag 6
#define VCSEC_TPNotifyTrackerStats_notifyReasonFaultCount_tag 7
#define VCSEC_TPStationaryConfig_lowPressureThreshold_tag 1
#define VCSEC_TPStationaryConfig_pressureDelta_tag 2
#define VCSEC_TPStationaryConfig_accelMeasurePeriod_tag 3
#define VCSEC_TPStationaryConfig_absoluteAccelWakeThreshold_tag 4
#define VCSEC_TPStationaryConfig_PTMeasureMod_tag 5
#define VCSEC_SetTPConfigration_stationaryConfig_tag 1
#define VCSEC_SetTPConfigration_motionConfig_tag 2
#define VCSEC_TPWheelUnitInfo_TIAppCRC_tag       1
#define VCSEC_TPWheelUnitInfo_MLXAppCRC_tag      2
#define VCSEC_TPWheelUnitInfo_batteryVoltage_mV_tag 3
#define VCSEC_UnknownKeyInfo_keyStatus_tag       1
#define VCSEC_UnknownKeyInfo_publicKey_tag       2
#define VCSEC_UnknownKeyInfo_keyFormFactor_tag   3
#define VCSEC_UnsecureNotification_notifyUser_tag 1
#define VCSEC_UnsecureNotification_closureStatuses_tag 2
#define VCSEC_UpdaterStatus_statusCode_tag       1
#define VCSEC_UpdaterStatus_location_tag         2
#define VCSEC_UpdaterStatus_nextAddressNumber_tag 3
#define VCSEC_UpdaterResponse_codeDescriptorMessage_tag 1
#define VCSEC_UpdaterResponse_updaterStatus_tag  2
#define VCSEC_VehicleInfo_VIN_tag                1
#define VCSEC_VehicleStatus_closureStatuses_tag  1
#define VCSEC_VehicleStatus_vehicleLockState_tag 2
#define VCSEC_VehicleStatus_vehicleSleepStatus_tag 3
#define VCSEC_VerifyAndInstallApp_sha256_tag     1
#define VCSEC_VerifyAndInstallApp_rValue_tag     2
#define VCSEC_VerifyAndInstallApp_sValue_tag     3
#define VCSEC_UpdaterCommand_getCodeDescriptor_tag 1
#define VCSEC_UpdaterCommand_setUpdaterLocation_tag 2
#define VCSEC_UpdaterCommand_stageBlock_tag      3
#define VCSEC_UpdaterCommand_verifyAndInstallApp_tag 4
#define VCSEC_UpdaterCommand_firmwareInfo_tag    5
#define VCSEC_WhitelistEntryInfo_keyId_tag       1
#define VCSEC_WhitelistEntryInfo_publicKey_tag   2
#define VCSEC_WhitelistEntryInfo_permissions_tag 3
#define VCSEC_WhitelistEntryInfo_metadataForKey_tag 4
#define VCSEC_WhitelistEntryInfo_secondsEntryRemainsActive_tag 5
#define VCSEC_WhitelistEntryInfo_slot_tag        6
#define VCSEC_WhitelistEntryInfo_keyRole_tag     7
#define VCSEC_WhitelistInfo_numberOfEntries_tag  1
#define VCSEC_WhitelistInfo_whitelistEntries_tag 2
#define VCSEC_WhitelistInfo_slotMask_tag         3
#define VCSEC_WhitelistOperation_addPublicKeyToWhitelist_tag 1
#define VCSEC_WhitelistOperation_removePublicKeyFromWhitelist_tag 2
#define VCSEC_WhitelistOperation_addPermissionsToPublicKey_tag 3
#define VCSEC_WhitelistOperation_removePermissionsFromPublicKey_tag 4
#define VCSEC_WhitelistOperation_addKeyToWhitelistAndAddPermissions_tag 5
#define VCSEC_WhitelistOperation_updateKeyAndPermissions_tag 7
#define VCSEC_WhitelistOperation_addImpermanentKey_tag 8
#define VCSEC_WhitelistOperation_addImpermanentKeyAndRemoveExisting_tag 9
#define VCSEC_WhitelistOperation_removeAllImpermanentKeys_tag 16
#define VCSEC_WhitelistOperation_replaceKey_tag  17
#define VCSEC_WhitelistOperation_metadataForKey_tag 6
#define VCSEC_UnsignedMessage_InformationRequest_tag 1
#define VCSEC_UnsignedMessage_RKEAction_tag      2
#define VCSEC_UnsignedMessage_authenticationResponse_tag 3
#define VCSEC_UnsignedMessage_closureMoveRequest_tag 4
#define VCSEC_UnsignedMessage_TPAdv_tag          5
#define VCSEC_UnsignedMessage_WhitelistOperation_tag 16
#define VCSEC_UnsignedMessage_updaterResponse_tag 20
#define VCSEC_UnsignedMessage_genealogyResponse_tag 21
#define VCSEC_UnsignedMessage_setMetaDataForKey_tag 22
#define VCSEC_UnsignedMessage_keyfobInfo_tag     23
#define VCSEC_UnsignedMessage_IMUState_tag       24
#define VCSEC_UnsignedMessage_nfcseState_tag     26
#define VCSEC_UnsignedMessage_lowPowerDeviceSleepManagerStats_tag 27
#define VCSEC_UnsignedMessage_TPData_tag         28
#define VCSEC_UnsignedMessage_TPWheelUnitInfo_tag 29
#define VCSEC_UnsignedMessage_resetTrackerStats_tag 30
#define VCSEC_UnsignedMessage_TPNotifyTrackerStats_tag 31
#define VCSEC_UnsignedMessage_TPNewSensorData_tag 32
#define VCSEC_UnsignedMessage_TPLRDetection_tag  33
#define VCSEC_UnsignedMessage_connectionMetrics_tag 34
#define VCSEC_UnsignedMessage_deviceActivity_tag 35
#define VCSEC_UnsignedMessage_getEpochSessionInfo_tag 36
#define VCSEC_UnsignedMessage_fromRCIResponse_tag 37
#define VCSEC_UnsignedMessage_BLEConfigAll_tag   38
#define VCSEC_UnsignedMessage_deviceMotion_tag   39
#define VCSEC_UnsignedMessage_appDeviceInfo_tag  40
#define VCSEC_UnsignedMessage_getReaderKey_tag   41
#define VCSEC_UnsignedMessage_MISessionResponse_tag 42
#define VCSEC_UnsignedMessage_MISessionStopped_tag 43
#define VCSEC_UnsignedMessage_accelData_tag      44
#define VCSEC_UnsignedMessage_TPMSAlarms_tag     45
#define VCSEC_UnsignedMessage_personalizationInformation_tag 25
#define VCSEC_ToVCSECMessage_signedMessage_tag   1
#define VCSEC_ToVCSECMessage_unsignedMessage_tag 2
#define VCSEC_WhitelistOperation_status_whitelistOperationInformation_tag 1
#define VCSEC_WhitelistOperation_status_signerOfOperation_tag 2
#define VCSEC_WhitelistOperation_status_operationStatus_tag 3
#define VCSEC_CommandStatus_operationStatus_tag  1
#define VCSEC_CommandStatus_signedMessageStatus_tag 2
#define VCSEC_CommandStatus_whitelistOperationStatus_tag 3
#define VCSEC_FromVCSECMessage_vehicleStatus_tag 1
#define VCSEC_FromVCSECMessage_sessionInfo_tag   2
#define VCSEC_FromVCSECMessage_authenticationRequest_tag 3
#define VCSEC_FromVCSECMessage_commandStatus_tag 4
#define VCSEC_FromVCSECMessage_personalizationInformation_tag 5
#define VCSEC_FromVCSECMessage_whitelistInfo_tag 16
#define VCSEC_FromVCSECMessage_whitelistEntryInfo_tag 17
#define VCSEC_FromVCSECMessage_vehicleInfo_tag   18
#define VCSEC_FromVCSECMessage_capabilities_tag  19
#define VCSEC_FromVCSECMessage_keyStatusInfo_tag 21
#define VCSEC_FromVCSECMessage_activeKey_tag     22
#define VCSEC_FromVCSECMessage_unknownKeyInfo_tag 23
#define VCSEC_FromVCSECMessage_updaterCommand_tag 30
#define VCSEC_FromVCSECMessage_genealogyRequest_tag 31
#define VCSEC_FromVCSECMessage_sleepManagerRequest_tag 32
#define VCSEC_FromVCSECMessage_imuRequest_tag    33
#define VCSEC_FromVCSECMessage_nfcseRequest_tag  34
#define VCSEC_FromVCSECMessage_TPDataRequest_tag 35
#define VCSEC_FromVCSECMessage_resetTrackerCommand_tag 36
#define VCSEC_FromVCSECMessage_TPNotifyTrackerCommand_tag 37
#define VCSEC_FromVCSECMessage_setTPConfiguration_tag 38
#define VCSEC_FromVCSECMessage_unsecureNotification_tag 39
#define VCSEC_FromVCSECMessage_epochSessionInfo_tag 40
#define VCSEC_FromVCSECMessage_toRCICommand_tag  41
#define VCSEC_FromVCSECMessage_rciControl_tag    42
#define VCSEC_FromVCSECMessage_BLEConfigCommand_tag 43
#define VCSEC_FromVCSECMessage_appDeviceInfoRequest_tag 44
#define VCSEC_FromVCSECMessage_alert_tag         45
#define VCSEC_FromVCSECMessage_nominalError_tag  46
#define VCSEC_FromVCSECMessage_MISessionRequest_tag 47
#define VCSEC_FromVCSECMessage_MISessionStop_tag 48
#define VCSEC_FromVCSECMessage_clearTPMSAlarms_tag 49

/* Struct field encoding specification for nanopb */
#define VCSEC_AccelData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    xAccel_g,          1) \
X(a, STATIC,   SINGULAR, INT32,    zAccel_g,          2)
#define VCSEC_AccelData_CALLBACK NULL
#define VCSEC_AccelData_DEFAULT NULL

#define VCSEC_ActiveKey_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  activeKey,         1)
#define VCSEC_ActiveKey_CALLBACK NULL
#define VCSEC_ActiveKey_DEFAULT NULL
#define VCSEC_ActiveKey_activeKey_MSGTYPE VCSEC_KeyIdentifier

#define VCSEC_Alert_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,alertHandlePulledWithoutAuth,sub_message.alertHandlePulledWithoutAuth),   1)
#define VCSEC_Alert_CALLBACK NULL
#define VCSEC_Alert_DEFAULT NULL
#define VCSEC_Alert_sub_message_alertHandlePulledWithoutAuth_MSGTYPE VCSEC_AlertHandlePulledWithoutAuth

#define VCSEC_AlertHandlePulledWithoutAuth_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   timeSinceAlertSet_ms,   1) \
X(a, STATIC,   SINGULAR, UENUM,    handlePulled,      2) \
X(a, STATIC,   SINGULAR, UINT32,   connectionCount,   3) \
X(a, STATIC,   SINGULAR, BOOL,     unknownDevicePresent,   4) \
X(a, STATIC,   SINGULAR, BOOL,     authRequested,     5) \
X(a, CALLBACK, REPEATED, MESSAGE,  deviceSpecificPayload,   6)
#define VCSEC_AlertHandlePulledWithoutAuth_CALLBACK pb_default_field_callback
#define VCSEC_AlertHandlePulledWithoutAuth_DEFAULT NULL
#define VCSEC_AlertHandlePulledWithoutAuth_deviceSpecificPayload_MSGTYPE VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload

#define VCSEC_AppDeviceInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    hardware_model_sha256,   1) \
X(a, STATIC,   SINGULAR, UENUM,    os,                2) \
X(a, STATIC,   SINGULAR, UENUM,    UWBAvailable,      3)
#define VCSEC_AppDeviceInfo_CALLBACK pb_default_field_callback
#define VCSEC_AppDeviceInfo_DEFAULT NULL

#define VCSEC_AuthenticationRequest_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sessionInfo,       2) \
X(a, STATIC,   SINGULAR, UENUM,    requestedLevel,    3) \
X(a, CALLBACK, REPEATED, UENUM,    reasonsForAuth,    4)
#define VCSEC_AuthenticationRequest_CALLBACK pb_default_field_callback
#define VCSEC_AuthenticationRequest_DEFAULT NULL
#define VCSEC_AuthenticationRequest_sessionInfo_MSGTYPE VCSEC_AuthenticationRequestToken

#define VCSEC_AuthenticationRequestToken_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    token,             1)
#define VCSEC_AuthenticationRequestToken_CALLBACK pb_default_field_callback
#define VCSEC_AuthenticationRequestToken_DEFAULT NULL

#define VCSEC_AuthenticationResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    authenticationLevel,   1) \
X(a, STATIC,   SINGULAR, UINT32,   estimatedDistance,   2) \
X(a, STATIC,   SINGULAR, UENUM,    authenticationRejection,   3)
#define VCSEC_AuthenticationResponse_CALLBACK NULL
#define VCSEC_AuthenticationResponse_DEFAULT NULL

#define VCSEC_BLEConfig_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    UINT32,   (sub_message,ADVInterval,sub_message.ADVInterval),   1) \
X(a, STATIC,   ONEOF,    UINT32,   (sub_message,sleepClockAccuracy,sub_message.sleepClockAccuracy),   2)
#define VCSEC_BLEConfig_CALLBACK NULL
#define VCSEC_BLEConfig_DEFAULT NULL

#define VCSEC_BLEConfigAll_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   ADVInterval,       1) \
X(a, STATIC,   SINGULAR, UINT32,   sleepClockAccuracy,   2)
#define VCSEC_BLEConfigAll_CALLBACK NULL
#define VCSEC_BLEConfigAll_DEFAULT NULL

#define VCSEC_BLEConfigCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    BLEConfigCommandType,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  BLEConfig,         2)
#define VCSEC_BLEConfigCommand_CALLBACK NULL
#define VCSEC_BLEConfigCommand_DEFAULT NULL
#define VCSEC_BLEConfigCommand_BLEConfig_MSGTYPE VCSEC_BLEConfig

#define VCSEC_Capabilities_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     chargePortOpen,    1) \
X(a, STATIC,   SINGULAR, BOOL,     chargePortClose,   2)
#define VCSEC_Capabilities_CALLBACK NULL
#define VCSEC_Capabilities_DEFAULT NULL

#define VCSEC_ClosureMoveRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    frontDriverDoor,   1) \
X(a, STATIC,   SINGULAR, UENUM,    frontPassengerDoor,   2) \
X(a, STATIC,   SINGULAR, UENUM,    rearDriverDoor,    3) \
X(a, STATIC,   SINGULAR, UENUM,    rearPassengerDoor,   4) \
X(a, STATIC,   SINGULAR, UENUM,    rearTrunk,         5) \
X(a, STATIC,   SINGULAR, UENUM,    frontTrunk,        6) \
X(a, STATIC,   SINGULAR, UENUM,    chargePort,        7)
#define VCSEC_ClosureMoveRequest_CALLBACK NULL
#define VCSEC_ClosureMoveRequest_DEFAULT NULL

#define VCSEC_ClosureStatuses_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    frontDriverDoor,   1) \
X(a, STATIC,   SINGULAR, UENUM,    frontPassengerDoor,   2) \
X(a, STATIC,   SINGULAR, UENUM,    rearDriverDoor,    3) \
X(a, STATIC,   SINGULAR, UENUM,    rearPassengerDoor,   4) \
X(a, STATIC,   SINGULAR, UENUM,    rearTrunk,         5) \
X(a, STATIC,   SINGULAR, UENUM,    frontTrunk,        6) \
X(a, STATIC,   SINGULAR, UENUM,    chargePort,        7)
#define VCSEC_ClosureStatuses_CALLBACK NULL
#define VCSEC_ClosureStatuses_DEFAULT NULL

#define VCSEC_CodeDescriptor_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    codeDescriptorLocation,   1) \
X(a, STATIC,   SINGULAR, UINT32,   version,           2) \
X(a, CALLBACK, SINGULAR, BYTES,    codeDescriptorBytes,   3)
#define VCSEC_CodeDescriptor_CALLBACK pb_default_field_callback
#define VCSEC_CodeDescriptor_DEFAULT NULL

#define VCSEC_CommandStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    operationStatus,   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,signedMessageStatus,sub_message.signedMessageStatus),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,whitelistOperationStatus,sub_message.whitelistOperationStatus),   3)
#define VCSEC_CommandStatus_CALLBACK NULL
#define VCSEC_CommandStatus_DEFAULT NULL
#define VCSEC_CommandStatus_sub_message_signedMessageStatus_MSGTYPE VCSEC_SignedMessage_status
#define VCSEC_CommandStatus_sub_message_whitelistOperationStatus_MSGTYPE VCSEC_WhitelistOperation_status

#define VCSEC_ConnectionMetrics_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   goodConnEventCount,   1) \
X(a, STATIC,   SINGULAR, UINT32,   missedConnEventCount,   2) \
X(a, STATIC,   SINGULAR, UINT32,   badCRCConnEventCount,   3)
#define VCSEC_ConnectionMetrics_CALLBACK NULL
#define VCSEC_ConnectionMetrics_DEFAULT NULL

#define VCSEC_DelaySleepRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   delayTime_ms,      1)
#define VCSEC_DelaySleepRequest_CALLBACK NULL
#define VCSEC_DelaySleepRequest_DEFAULT NULL

#define VCSEC_DeviceMotion_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UENUM,    states,            1) \
X(a, STATIC,   SINGULAR, UENUM,    confidence,        2)
#define VCSEC_DeviceMotion_CALLBACK pb_default_field_callback
#define VCSEC_DeviceMotion_DEFAULT NULL

#define VCSEC_FromRCI_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    response,          1)
#define VCSEC_FromRCI_CALLBACK pb_default_field_callback
#define VCSEC_FromRCI_DEFAULT NULL

#define VCSEC_FromVCSECMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,vehicleStatus,sub_message.vehicleStatus),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,sessionInfo,sub_message.sessionInfo),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,authenticationRequest,sub_message.authenticationRequest),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,commandStatus,sub_message.commandStatus),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,personalizationInformation,sub_message.personalizationInformation),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,whitelistInfo,sub_message.whitelistInfo),  16) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,whitelistEntryInfo,sub_message.whitelistEntryInfo),  17) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,vehicleInfo,sub_message.vehicleInfo),  18) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,capabilities,sub_message.capabilities),  19) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,keyStatusInfo,sub_message.keyStatusInfo),  21) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,activeKey,sub_message.activeKey),  22) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,unknownKeyInfo,sub_message.unknownKeyInfo),  23) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,updaterCommand,sub_message.updaterCommand),  30) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,genealogyRequest,sub_message.genealogyRequest),  31) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,sleepManagerRequest,sub_message.sleepManagerRequest),  32) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,imuRequest,sub_message.imuRequest),  33) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,nfcseRequest,sub_message.nfcseRequest),  34) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,TPDataRequest,sub_message.TPDataRequest),  35) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,resetTrackerCommand,sub_message.resetTrackerCommand),  36) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,TPNotifyTrackerCommand,sub_message.TPNotifyTrackerCommand),  37) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,setTPConfiguration,sub_message.setTPConfiguration),  38) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,unsecureNotification,sub_message.unsecureNotification),  39) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,epochSessionInfo,sub_message.epochSessionInfo),  40) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,toRCICommand,sub_message.toRCICommand),  41) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,rciControl,sub_message.rciControl),  42) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,BLEConfigCommand,sub_message.BLEConfigCommand),  43) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,appDeviceInfoRequest,sub_message.appDeviceInfoRequest),  44) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,alert,sub_message.alert),  45) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,nominalError,sub_message.nominalError),  46) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,MISessionRequest,sub_message.MISessionRequest),  47) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,MISessionStop,sub_message.MISessionStop),  48) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,clearTPMSAlarms,sub_message.clearTPMSAlarms),  49)
#define VCSEC_FromVCSECMessage_CALLBACK NULL
#define VCSEC_FromVCSECMessage_DEFAULT NULL
#define VCSEC_FromVCSECMessage_sub_message_vehicleStatus_MSGTYPE VCSEC_VehicleStatus
#define VCSEC_FromVCSECMessage_sub_message_sessionInfo_MSGTYPE VCSEC_SessionInfo
#define VCSEC_FromVCSECMessage_sub_message_authenticationRequest_MSGTYPE VCSEC_AuthenticationRequest
#define VCSEC_FromVCSECMessage_sub_message_commandStatus_MSGTYPE VCSEC_CommandStatus
#define VCSEC_FromVCSECMessage_sub_message_personalizationInformation_MSGTYPE VCSEC_PersonalizationInformation
#define VCSEC_FromVCSECMessage_sub_message_whitelistInfo_MSGTYPE VCSEC_WhitelistInfo
#define VCSEC_FromVCSECMessage_sub_message_whitelistEntryInfo_MSGTYPE VCSEC_WhitelistEntryInfo
#define VCSEC_FromVCSECMessage_sub_message_vehicleInfo_MSGTYPE VCSEC_VehicleInfo
#define VCSEC_FromVCSECMessage_sub_message_capabilities_MSGTYPE VCSEC_Capabilities
#define VCSEC_FromVCSECMessage_sub_message_keyStatusInfo_MSGTYPE VCSEC_KeyStatusInfo
#define VCSEC_FromVCSECMessage_sub_message_activeKey_MSGTYPE VCSEC_ActiveKey
#define VCSEC_FromVCSECMessage_sub_message_unknownKeyInfo_MSGTYPE VCSEC_UnknownKeyInfo
#define VCSEC_FromVCSECMessage_sub_message_updaterCommand_MSGTYPE VCSEC_UpdaterCommand
#define VCSEC_FromVCSECMessage_sub_message_sleepManagerRequest_MSGTYPE VCSEC_SleepManagerRequest
#define VCSEC_FromVCSECMessage_sub_message_setTPConfiguration_MSGTYPE VCSEC_SetTPConfigration
#define VCSEC_FromVCSECMessage_sub_message_unsecureNotification_MSGTYPE VCSEC_UnsecureNotification
#define VCSEC_FromVCSECMessage_sub_message_epochSessionInfo_MSGTYPE VCSEC_Signatures_SessionInfo
#define VCSEC_FromVCSECMessage_sub_message_toRCICommand_MSGTYPE VCSEC_ToRCI
#define VCSEC_FromVCSECMessage_sub_message_BLEConfigCommand_MSGTYPE VCSEC_BLEConfigCommand
#define VCSEC_FromVCSECMessage_sub_message_alert_MSGTYPE VCSEC_Alert
#define VCSEC_FromVCSECMessage_sub_message_nominalError_MSGTYPE VCSEC_NominalError
#define VCSEC_FromVCSECMessage_sub_message_MISessionRequest_MSGTYPE VCSEC_MISessionRequest
#define VCSEC_FromVCSECMessage_sub_message_MISessionStop_MSGTYPE VCSEC_MISessionStop
#define VCSEC_FromVCSECMessage_sub_message_clearTPMSAlarms_MSGTYPE VCSEC_TPMSAlarms

#define VCSEC_Genealogy_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    serialNumber,      1) \
X(a, CALLBACK, SINGULAR, BYTES,    partNumber,        2)
#define VCSEC_Genealogy_CALLBACK pb_default_field_callback
#define VCSEC_Genealogy_DEFAULT NULL

#define VCSEC_GenealogyResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  currentGenealogy,   1) \
X(a, STATIC,   SINGULAR, UENUM,    status,            2)
#define VCSEC_GenealogyResponse_CALLBACK NULL
#define VCSEC_GenealogyResponse_DEFAULT NULL
#define VCSEC_GenealogyResponse_currentGenealogy_MSGTYPE VCSEC_Genealogy

#define VCSEC_GetCodeDescriptor_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    location,          1)
#define VCSEC_GetCodeDescriptor_CALLBACK NULL
#define VCSEC_GetCodeDescriptor_DEFAULT NULL

#define VCSEC_GetReaderKey_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    command,           1)
#define VCSEC_GetReaderKey_CALLBACK NULL
#define VCSEC_GetReaderKey_DEFAULT NULL

#define VCSEC_GetSessionInfoRequest_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  key_identity,      1)
#define VCSEC_GetSessionInfoRequest_CALLBACK NULL
#define VCSEC_GetSessionInfoRequest_DEFAULT NULL
#define VCSEC_GetSessionInfoRequest_key_identity_MSGTYPE VCSEC_KeyIdentity

#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   keyChannel,        1) \
X(a, STATIC,   SINGULAR, UENUM,    authenticationLevel,   2) \
X(a, STATIC,   SINGULAR, BOOL,     present,           3) \
X(a, STATIC,   SINGULAR, SINT32,   RSSILeft,          4) \
X(a, STATIC,   SINGULAR, SINT32,   RSSIRight,         5) \
X(a, STATIC,   SINGULAR, SINT32,   RSSIRear,          6) \
X(a, STATIC,   SINGULAR, SINT32,   RSSICenter,        7) \
X(a, STATIC,   SINGULAR, SINT32,   RSSIFront,         8) \
X(a, STATIC,   SINGULAR, SINT32,   RSSISecondary,     9) \
X(a, STATIC,   SINGULAR, SINT32,   RSSINFCCradle,    10) \
X(a, STATIC,   SINGULAR, SINT32,   RSSIRearLeft,     11) \
X(a, STATIC,   SINGULAR, SINT32,   RSSIRearRight,    12) \
X(a, STATIC,   SINGULAR, BOOL,     highThreshLeftPresent,  13) \
X(a, STATIC,   SINGULAR, BOOL,     highThreshRightPresent,  14) \
X(a, STATIC,   SINGULAR, BOOL,     highThreshCenterPresent,  15) \
X(a, STATIC,   SINGULAR, BOOL,     highThreshFrontPresent,  16) \
X(a, STATIC,   SINGULAR, BOOL,     highThreshRearPresent,  17) \
X(a, STATIC,   SINGULAR, BOOL,     highThreshRearLeftPresent,  18) \
X(a, STATIC,   SINGULAR, BOOL,     highThreshRearRightPresent,  19) \
X(a, STATIC,   SINGULAR, BOOL,     highThreshSecondaryPresent,  20) \
X(a, STATIC,   SINGULAR, BOOL,     highThreshNFCPresent,  21) \
X(a, STATIC,   SINGULAR, BOOL,     sortedDeltaBayesLeftPresent,  22) \
X(a, STATIC,   SINGULAR, BOOL,     sortedDeltaBayesRightPresent,  23) \
X(a, STATIC,   SINGULAR, BOOL,     rawDeltaBayesLeftPresent,  24) \
X(a, STATIC,   SINGULAR, BOOL,     rawDeltaBayesRightPresent,  25)
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_CALLBACK NULL
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_DEFAULT NULL

#define VCSEC_InformationRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    informationRequestType,   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,keyId,sub_message.keyId),   2) \
X(a, CALLBACK, ONEOF,    BYTES,    (sub_message,publicKey,sub_message.publicKey),   3) \
X(a, STATIC,   ONEOF,    UINT32,   (sub_message,slot,sub_message.slot),   4)
#define VCSEC_InformationRequest_CALLBACK pb_default_field_callback
#define VCSEC_InformationRequest_DEFAULT NULL
#define VCSEC_InformationRequest_sub_message_keyId_MSGTYPE VCSEC_KeyIdentifier

#define VCSEC_KeyfobInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    appCRC,            1) \
X(a, STATIC,   SINGULAR, UINT32,   batteryVoltage_mV,   2) \
X(a, STATIC,   SINGULAR, INT32,    temperature_degreesC,   3)
#define VCSEC_KeyfobInfo_CALLBACK pb_default_field_callback
#define VCSEC_KeyfobInfo_DEFAULT NULL

#define VCSEC_KeyIdentifier_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, publicKeySHA1,     1)
#define VCSEC_KeyIdentifier_CALLBACK NULL
#define VCSEC_KeyIdentifier_DEFAULT NULL

#define VCSEC_KeyIdentity_FIELDLIST(X, a) \
X(a, CALLBACK, ONEOF,    BYTES,    (sub_message,public_key,sub_message.public_key),   1) \
X(a, CALLBACK, ONEOF,    BYTES,    (sub_message,key_id,sub_message.key_id),   2)
#define VCSEC_KeyIdentity_CALLBACK pb_default_field_callback
#define VCSEC_KeyIdentity_DEFAULT NULL

#define VCSEC_KeyMetadata_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    keyFormFactor,     1)
#define VCSEC_KeyMetadata_CALLBACK NULL
#define VCSEC_KeyMetadata_DEFAULT NULL

#define VCSEC_KeyStatus_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  keyId,             1) \
X(a, STATIC,   SINGULAR, UENUM,    nfcPresence,       2) \
X(a, STATIC,   SINGULAR, UENUM,    blePresence,       3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  publicKey,         4) \
X(a, STATIC,   SINGULAR, UENUM,    keyFormFactor,     5) \
X(a, STATIC,   SINGULAR, UINT32,   slot,              6)
#define VCSEC_KeyStatus_CALLBACK NULL
#define VCSEC_KeyStatus_DEFAULT NULL
#define VCSEC_KeyStatus_keyId_MSGTYPE VCSEC_KeyIdentifier
#define VCSEC_KeyStatus_publicKey_MSGTYPE VCSEC_PublicKey

#define VCSEC_KeyStatusInfo_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  keyStatuses,       1)
#define VCSEC_KeyStatusInfo_CALLBACK pb_default_field_callback
#define VCSEC_KeyStatusInfo_DEFAULT NULL
#define VCSEC_KeyStatusInfo_keyStatuses_MSGTYPE VCSEC_KeyStatus

#define VCSEC_MIConfigurationData_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    data_,             1)
#define VCSEC_MIConfigurationData_CALLBACK pb_default_field_callback
#define VCSEC_MIConfigurationData_DEFAULT NULL

#define VCSEC_MISessionRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   sessionId,         1) \
X(a, CALLBACK, SINGULAR, BYTES,    accessoryConfigurationData,   2)
#define VCSEC_MISessionRequest_CALLBACK pb_default_field_callback
#define VCSEC_MISessionRequest_DEFAULT NULL

#define VCSEC_MISessionResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   sessionId,         1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,MIConfigurationData,sub_message.MIConfigurationData),   2) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,errorCode,sub_message.errorCode),   3)
#define VCSEC_MISessionResponse_CALLBACK NULL
#define VCSEC_MISessionResponse_DEFAULT NULL
#define VCSEC_MISessionResponse_sub_message_MIConfigurationData_MSGTYPE VCSEC_MIConfigurationData

#define VCSEC_MISessionStop_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    UINT32,   (sub_message,sessionId,sub_message.sessionId),   1)
#define VCSEC_MISessionStop_CALLBACK NULL
#define VCSEC_MISessionStop_DEFAULT NULL

#define VCSEC_MISessionStopped_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    UINT32,   (sub_message,sessionId,sub_message.sessionId),   1)
#define VCSEC_MISessionStopped_CALLBACK NULL
#define VCSEC_MISessionStopped_DEFAULT NULL

#define VCSEC_NFCSEState_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    devicePubKeyState,   1) \
X(a, STATIC,   SINGULAR, UENUM,    vehiclePubKeyState,   2) \
X(a, STATIC,   SINGULAR, UENUM,    sharedSecretState,   3) \
X(a, STATIC,   SINGULAR, UENUM,    insecureCommandState,   4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  vehiclePubKey,     5)
#define VCSEC_NFCSEState_CALLBACK NULL
#define VCSEC_NFCSEState_DEFAULT NULL
#define VCSEC_NFCSEState_vehiclePubKey_MSGTYPE VCSEC_PublicKey

#define VCSEC_NominalError_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    genericError,      1)
#define VCSEC_NominalError_CALLBACK NULL
#define VCSEC_NominalError_DEFAULT NULL

#define VCSEC_PermissionChange_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  key,               1) \
X(a, STATIC,   REPEATED, UENUM,    permission,        2) \
X(a, STATIC,   SINGULAR, UINT32,   secondsToBeActive,   3) \
X(a, STATIC,   SINGULAR, UENUM,    keyRole,           4)
#define VCSEC_PermissionChange_CALLBACK NULL
#define VCSEC_PermissionChange_DEFAULT NULL
#define VCSEC_PermissionChange_key_MSGTYPE VCSEC_PublicKey

#define VCSEC_PersonalizationInformation_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    VIN,               1)
#define VCSEC_PersonalizationInformation_CALLBACK pb_default_field_callback
#define VCSEC_PersonalizationInformation_DEFAULT NULL

#define VCSEC_PublicKey_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    PublicKeyRaw,      1)
#define VCSEC_PublicKey_CALLBACK NULL
#define VCSEC_PublicKey_DEFAULT NULL

#define VCSEC_RCISignature_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    nonce,             1) \
X(a, CALLBACK, SINGULAR, BYTES,    tag,               2)
#define VCSEC_RCISignature_CALLBACK pb_default_field_callback
#define VCSEC_RCISignature_DEFAULT NULL

#define VCSEC_ReplaceKey_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,publicKeyToReplace,sub_message.publicKeyToReplace),   1) \
X(a, STATIC,   ONEOF,    UINT32,   (sub_message,slotToReplace,sub_message.slotToReplace),   2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  keyToAdd,          3) \
X(a, STATIC,   SINGULAR, UENUM,    keyRole,           4) \
X(a, STATIC,   SINGULAR, BOOL,     impermanent,       5)
#define VCSEC_ReplaceKey_CALLBACK NULL
#define VCSEC_ReplaceKey_DEFAULT NULL
#define VCSEC_ReplaceKey_sub_message_publicKeyToReplace_MSGTYPE VCSEC_PublicKey
#define VCSEC_ReplaceKey_keyToAdd_MSGTYPE VCSEC_PublicKey

#define VCSEC_ResetTrackerStats_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   totalResetsDueToPowerOn,   1) \
X(a, STATIC,   SINGULAR, UINT32,   totalResetsDueToPinReset,   2) \
X(a, STATIC,   SINGULAR, UINT32,   totalResetsDueToVDDSLoss,   3) \
X(a, STATIC,   SINGULAR, UINT32,   totalResetsDueToVDDLoss,   4) \
X(a, STATIC,   SINGULAR, UINT32,   totalResetsDueToVDDRLoss,   5) \
X(a, STATIC,   SINGULAR, UINT32,   totalResetsDueToClockLoss,   6) \
X(a, STATIC,   SINGULAR, UINT32,   totalResetsDueToSystemReset,   7) \
X(a, STATIC,   SINGULAR, UINT32,   totalResetsDueToWarmReset,   8) \
X(a, STATIC,   SINGULAR, UINT32,   totalResetsDueToWakeupFromShutdown,   9) \
X(a, STATIC,   SINGULAR, UINT32,   totalResetsDueToWakeupFromTCKNoise,  10)
#define VCSEC_ResetTrackerStats_CALLBACK NULL
#define VCSEC_ResetTrackerStats_DEFAULT NULL

#define VCSEC_SessionInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    token,             1) \
X(a, STATIC,   SINGULAR, UINT32,   counter,           2) \
X(a, STATIC,   SINGULAR, BYTES,    publicKey,         3)
#define VCSEC_SessionInfo_CALLBACK pb_default_field_callback
#define VCSEC_SessionInfo_DEFAULT NULL

#define VCSEC_SetTPConfigration_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  stationaryConfig,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  motionConfig,      2)
#define VCSEC_SetTPConfigration_CALLBACK NULL
#define VCSEC_SetTPConfigration_DEFAULT NULL
#define VCSEC_SetTPConfigration_stationaryConfig_MSGTYPE VCSEC_TPStationaryConfig
#define VCSEC_SetTPConfigration_motionConfig_MSGTYPE VCSEC_TPMotionConfig

#define VCSEC_SetUpdaterLocation_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    updaterLocation,   1)
#define VCSEC_SetUpdaterLocation_CALLBACK NULL
#define VCSEC_SetUpdaterLocation_DEFAULT NULL

#define VCSEC_Signatures_FIELDLIST(X, a) \

#define VCSEC_Signatures_CALLBACK NULL
#define VCSEC_Signatures_DEFAULT NULL

#define VCSEC_Signatures_SessionInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   counter,           1) \
X(a, CALLBACK, SINGULAR, BYTES,    publicKey,         2) \
X(a, CALLBACK, SINGULAR, BYTES,    epoch,             3) \
X(a, STATIC,   SINGULAR, FIXED32,  clock_time,        4) \
X(a, STATIC,   SINGULAR, UENUM,    status,            5)
#define VCSEC_Signatures_SessionInfo_CALLBACK pb_default_field_callback
#define VCSEC_Signatures_SessionInfo_DEFAULT NULL

#define VCSEC_SignedMessage_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    token,             1) \
X(a, STATIC,   SINGULAR, BYTES,    protobufMessageAsBytes,   2) \
X(a, STATIC,   SINGULAR, UENUM,    signatureType,     3) \
X(a, STATIC,   SINGULAR, BYTES,    signature,         4) \
X(a, STATIC,   SINGULAR, BYTES,    keyId,             5) \
X(a, STATIC,   SINGULAR, UINT32,   counter,           6)
#define VCSEC_SignedMessage_CALLBACK pb_default_field_callback
#define VCSEC_SignedMessage_DEFAULT NULL

#define VCSEC_SignedMessage_status_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   counter,           1) \
X(a, STATIC,   SINGULAR, UENUM,    signedMessageInformation,   2)
#define VCSEC_SignedMessage_status_CALLBACK NULL
#define VCSEC_SignedMessage_status_DEFAULT NULL

#define VCSEC_SleepManagerRequest_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,delaySleepRequest,sub_message.delaySleepRequest),   1) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,sleepManagerCommand,sub_message.sleepManagerCommand),   2)
#define VCSEC_SleepManagerRequest_CALLBACK NULL
#define VCSEC_SleepManagerRequest_DEFAULT NULL
#define VCSEC_SleepManagerRequest_sub_message_delaySleepRequest_MSGTYPE VCSEC_DelaySleepRequest

#define VCSEC_SleepManagerStats_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   totalCPUTime,      1) \
X(a, STATIC,   SINGULAR, UINT32,   totalAwakeTime,    2) \
X(a, STATIC,   SINGULAR, UENUM,    isBLETrimApplied,   3)
#define VCSEC_SleepManagerStats_CALLBACK NULL
#define VCSEC_SleepManagerStats_DEFAULT NULL

#define VCSEC_StageBlock_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   blockAddress,      1) \
X(a, CALLBACK, SINGULAR, BYTES,    blockToStage,      2)
#define VCSEC_StageBlock_CALLBACK pb_default_field_callback
#define VCSEC_StageBlock_DEFAULT NULL

#define VCSEC_ToRCI_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    command,           1) \
X(a, CALLBACK, ONEOF,    BYTES,    (sub_message,HMAC_signature,sub_message.HMAC_signature),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,rci_signature,sub_message.rci_signature),   3)
#define VCSEC_ToRCI_CALLBACK pb_default_field_callback
#define VCSEC_ToRCI_DEFAULT NULL
#define VCSEC_ToRCI_sub_message_rci_signature_MSGTYPE VCSEC_RCISignature

#define VCSEC_ToVCSECMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,signedMessage,sub_message.signedMessage),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,unsignedMessage,sub_message.unsignedMessage),   2)
#define VCSEC_ToVCSECMessage_CALLBACK NULL
#define VCSEC_ToVCSECMessage_DEFAULT NULL
#define VCSEC_ToVCSECMessage_sub_message_signedMessage_MSGTYPE VCSEC_SignedMessage
#define VCSEC_ToVCSECMessage_sub_message_unsignedMessage_MSGTYPE VCSEC_UnsignedMessage

#define VCSEC_TPAdv_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    pressure,          1) \
X(a, STATIC,   SINGULAR, SINT32,   temperature,       2) \
X(a, STATIC,   SINGULAR, UENUM,    TPNotifyReason,    3) \
X(a, STATIC,   SINGULAR, UINT32,   batteryVoltage_mV,   4) \
X(a, STATIC,   SINGULAR, UINT32,   advertismentCount,   5) \
X(a, STATIC,   SINGULAR, UENUM,    TPMSAdvType,       6)
#define VCSEC_TPAdv_CALLBACK NULL
#define VCSEC_TPAdv_DEFAULT NULL

#define VCSEC_TPData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    pressure,          1) \
X(a, STATIC,   SINGULAR, SINT32,   temperature,       2)
#define VCSEC_TPData_CALLBACK NULL
#define VCSEC_TPData_DEFAULT NULL

#define VCSEC_TPLRDetection_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    LRDetectionResult,   1) \
X(a, STATIC,   SINGULAR, UINT32,   totalPeriod_ms,    2) \
X(a, STATIC,   SINGULAR, UINT32,   x90degCnt,         3) \
X(a, STATIC,   SINGULAR, UINT32,   x270degCnt,        4) \
X(a, STATIC,   SINGULAR, SINT32,   zAcceleration_dg,   5) \
X(a, STATIC,   SINGULAR, UINT32,   zAccelDiffCnt,     6)
#define VCSEC_TPLRDetection_CALLBACK NULL
#define VCSEC_TPLRDetection_DEFAULT NULL

#define VCSEC_TPMotionConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   pressureDelta,     1) \
X(a, STATIC,   SINGULAR, UINT32,   temperatureDelta,   2) \
X(a, STATIC,   SINGULAR, UENUM,    PTMeasurePeriod,   3)
#define VCSEC_TPMotionConfig_CALLBACK NULL
#define VCSEC_TPMotionConfig_DEFAULT NULL

#define VCSEC_TPMSAlarms_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     pressure,          1) \
X(a, STATIC,   SINGULAR, BOOL,     temperature,       2) \
X(a, STATIC,   SINGULAR, BOOL,     acceleration,      3) \
X(a, STATIC,   SINGULAR, BOOL,     voltage,           4) \
X(a, STATIC,   SINGULAR, BOOL,     LFDetect,          5) \
X(a, STATIC,   SINGULAR, BOOL,     wheelMotion,       6)
#define VCSEC_TPMSAlarms_CALLBACK NULL
#define VCSEC_TPMSAlarms_DEFAULT NULL

#define VCSEC_TPNewSensorData_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensorPublicKey,   1)
#define VCSEC_TPNewSensorData_CALLBACK NULL
#define VCSEC_TPNewSensorData_DEFAULT NULL
#define VCSEC_TPNewSensorData_sensorPublicKey_MSGTYPE VCSEC_PublicKey

#define VCSEC_TPNotifyTrackerStats_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   notifyReasonUnknownCount,   1) \
X(a, STATIC,   SINGULAR, UINT32,   notifyReasonLowPressureCount,   2) \
X(a, STATIC,   SINGULAR, UINT32,   notifyReasonPTValueUpdateCount,   3) \
X(a, STATIC,   SINGULAR, UINT32,   notifyReasonWheelMovingCount,   4) \
X(a, STATIC,   SINGULAR, UINT32,   notifyReasonWheelRotationDirectionReadyCount,   5) \
X(a, STATIC,   SINGULAR, UINT32,   notifyReasonLFCount,   6) \
X(a, STATIC,   SINGULAR, UINT32,   notifyReasonFaultCount,   7)
#define VCSEC_TPNotifyTrackerStats_CALLBACK NULL
#define VCSEC_TPNotifyTrackerStats_DEFAULT NULL

#define VCSEC_TPStationaryConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   lowPressureThreshold,   1) \
X(a, STATIC,   SINGULAR, UINT32,   pressureDelta,     2) \
X(a, STATIC,   SINGULAR, UENUM,    accelMeasurePeriod,   3) \
X(a, STATIC,   SINGULAR, INT32,    absoluteAccelWakeThreshold,   4) \
X(a, STATIC,   SINGULAR, UINT32,   PTMeasureMod,      5)
#define VCSEC_TPStationaryConfig_CALLBACK NULL
#define VCSEC_TPStationaryConfig_DEFAULT NULL

#define VCSEC_TPWheelUnitInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    TIAppCRC,          1) \
X(a, CALLBACK, SINGULAR, BYTES,    MLXAppCRC,         2) \
X(a, STATIC,   SINGULAR, UINT32,   batteryVoltage_mV,   3)
#define VCSEC_TPWheelUnitInfo_CALLBACK pb_default_field_callback
#define VCSEC_TPWheelUnitInfo_DEFAULT NULL

#define VCSEC_UnknownKeyInfo_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  keyStatus,         1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  publicKey,         2) \
X(a, STATIC,   SINGULAR, UENUM,    keyFormFactor,     3)
#define VCSEC_UnknownKeyInfo_CALLBACK NULL
#define VCSEC_UnknownKeyInfo_DEFAULT NULL
#define VCSEC_UnknownKeyInfo_keyStatus_MSGTYPE VCSEC_KeyStatus
#define VCSEC_UnknownKeyInfo_publicKey_MSGTYPE VCSEC_PublicKey

#define VCSEC_UnsecureNotification_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     notifyUser,        1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  closureStatuses,   2)
#define VCSEC_UnsecureNotification_CALLBACK NULL
#define VCSEC_UnsecureNotification_DEFAULT NULL
#define VCSEC_UnsecureNotification_closureStatuses_MSGTYPE VCSEC_ClosureStatuses

#define VCSEC_UnsignedMessage_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,InformationRequest,sub_message.InformationRequest),   1) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,RKEAction,sub_message.RKEAction),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,authenticationResponse,sub_message.authenticationResponse),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,closureMoveRequest,sub_message.closureMoveRequest),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,TPAdv,sub_message.TPAdv),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,WhitelistOperation,sub_message.WhitelistOperation),  16) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,updaterResponse,sub_message.updaterResponse),  20) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,genealogyResponse,sub_message.genealogyResponse),  21) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,setMetaDataForKey,sub_message.setMetaDataForKey),  22) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,keyfobInfo,sub_message.keyfobInfo),  23) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,IMUState,sub_message.IMUState),  24) \
X(a, STATIC,   OPTIONAL, MESSAGE,  personalizationInformation,  25) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,nfcseState,sub_message.nfcseState),  26) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,lowPowerDeviceSleepManagerStats,sub_message.lowPowerDeviceSleepManagerStats),  27) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,TPData,sub_message.TPData),  28) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,TPWheelUnitInfo,sub_message.TPWheelUnitInfo),  29) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,resetTrackerStats,sub_message.resetTrackerStats),  30) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,TPNotifyTrackerStats,sub_message.TPNotifyTrackerStats),  31) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,TPNewSensorData,sub_message.TPNewSensorData),  32) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,TPLRDetection,sub_message.TPLRDetection),  33) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,connectionMetrics,sub_message.connectionMetrics),  34) \
X(a, STATIC,   ONEOF,    UENUM,    (sub_message,deviceActivity,sub_message.deviceActivity),  35) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,getEpochSessionInfo,sub_message.getEpochSessionInfo),  36) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,fromRCIResponse,sub_message.fromRCIResponse),  37) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,BLEConfigAll,sub_message.BLEConfigAll),  38) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,deviceMotion,sub_message.deviceMotion),  39) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,appDeviceInfo,sub_message.appDeviceInfo),  40) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,getReaderKey,sub_message.getReaderKey),  41) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,MISessionResponse,sub_message.MISessionResponse),  42) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,MISessionStopped,sub_message.MISessionStopped),  43) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,accelData,sub_message.accelData),  44) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,TPMSAlarms,sub_message.TPMSAlarms),  45)
#define VCSEC_UnsignedMessage_CALLBACK NULL
#define VCSEC_UnsignedMessage_DEFAULT NULL
#define VCSEC_UnsignedMessage_sub_message_InformationRequest_MSGTYPE VCSEC_InformationRequest
#define VCSEC_UnsignedMessage_sub_message_authenticationResponse_MSGTYPE VCSEC_AuthenticationResponse
#define VCSEC_UnsignedMessage_sub_message_closureMoveRequest_MSGTYPE VCSEC_ClosureMoveRequest
#define VCSEC_UnsignedMessage_sub_message_TPAdv_MSGTYPE VCSEC_TPAdv
#define VCSEC_UnsignedMessage_sub_message_WhitelistOperation_MSGTYPE VCSEC_WhitelistOperation
#define VCSEC_UnsignedMessage_sub_message_updaterResponse_MSGTYPE VCSEC_UpdaterResponse
#define VCSEC_UnsignedMessage_sub_message_genealogyResponse_MSGTYPE VCSEC_GenealogyResponse
#define VCSEC_UnsignedMessage_sub_message_setMetaDataForKey_MSGTYPE VCSEC_KeyMetadata
#define VCSEC_UnsignedMessage_sub_message_keyfobInfo_MSGTYPE VCSEC_KeyfobInfo
#define VCSEC_UnsignedMessage_personalizationInformation_MSGTYPE VCSEC_PersonalizationInformation
#define VCSEC_UnsignedMessage_sub_message_nfcseState_MSGTYPE VCSEC_NFCSEState
#define VCSEC_UnsignedMessage_sub_message_lowPowerDeviceSleepManagerStats_MSGTYPE VCSEC_SleepManagerStats
#define VCSEC_UnsignedMessage_sub_message_TPData_MSGTYPE VCSEC_TPData
#define VCSEC_UnsignedMessage_sub_message_TPWheelUnitInfo_MSGTYPE VCSEC_TPWheelUnitInfo
#define VCSEC_UnsignedMessage_sub_message_resetTrackerStats_MSGTYPE VCSEC_ResetTrackerStats
#define VCSEC_UnsignedMessage_sub_message_TPNotifyTrackerStats_MSGTYPE VCSEC_TPNotifyTrackerStats
#define VCSEC_UnsignedMessage_sub_message_TPNewSensorData_MSGTYPE VCSEC_TPNewSensorData
#define VCSEC_UnsignedMessage_sub_message_TPLRDetection_MSGTYPE VCSEC_TPLRDetection
#define VCSEC_UnsignedMessage_sub_message_connectionMetrics_MSGTYPE VCSEC_ConnectionMetrics
#define VCSEC_UnsignedMessage_sub_message_getEpochSessionInfo_MSGTYPE VCSEC_GetSessionInfoRequest
#define VCSEC_UnsignedMessage_sub_message_fromRCIResponse_MSGTYPE VCSEC_FromRCI
#define VCSEC_UnsignedMessage_sub_message_BLEConfigAll_MSGTYPE VCSEC_BLEConfigAll
#define VCSEC_UnsignedMessage_sub_message_deviceMotion_MSGTYPE VCSEC_DeviceMotion
#define VCSEC_UnsignedMessage_sub_message_appDeviceInfo_MSGTYPE VCSEC_AppDeviceInfo
#define VCSEC_UnsignedMessage_sub_message_getReaderKey_MSGTYPE VCSEC_GetReaderKey
#define VCSEC_UnsignedMessage_sub_message_MISessionResponse_MSGTYPE VCSEC_MISessionResponse
#define VCSEC_UnsignedMessage_sub_message_MISessionStopped_MSGTYPE VCSEC_MISessionStopped
#define VCSEC_UnsignedMessage_sub_message_accelData_MSGTYPE VCSEC_AccelData
#define VCSEC_UnsignedMessage_sub_message_TPMSAlarms_MSGTYPE VCSEC_TPMSAlarms

#define VCSEC_UpdaterCommand_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,getCodeDescriptor,sub_message.getCodeDescriptor),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,setUpdaterLocation,sub_message.setUpdaterLocation),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,stageBlock,sub_message.stageBlock),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,verifyAndInstallApp,sub_message.verifyAndInstallApp),   4) \
X(a, CALLBACK, ONEOF,    BYTES,    (sub_message,firmwareInfo,sub_message.firmwareInfo),   5)
#define VCSEC_UpdaterCommand_CALLBACK pb_default_field_callback
#define VCSEC_UpdaterCommand_DEFAULT NULL
#define VCSEC_UpdaterCommand_sub_message_getCodeDescriptor_MSGTYPE VCSEC_GetCodeDescriptor
#define VCSEC_UpdaterCommand_sub_message_setUpdaterLocation_MSGTYPE VCSEC_SetUpdaterLocation
#define VCSEC_UpdaterCommand_sub_message_stageBlock_MSGTYPE VCSEC_StageBlock
#define VCSEC_UpdaterCommand_sub_message_verifyAndInstallApp_MSGTYPE VCSEC_VerifyAndInstallApp

#define VCSEC_UpdaterResponse_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,codeDescriptorMessage,sub_message.codeDescriptorMessage),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,updaterStatus,sub_message.updaterStatus),   2)
#define VCSEC_UpdaterResponse_CALLBACK NULL
#define VCSEC_UpdaterResponse_DEFAULT NULL
#define VCSEC_UpdaterResponse_sub_message_codeDescriptorMessage_MSGTYPE VCSEC_CodeDescriptor
#define VCSEC_UpdaterResponse_sub_message_updaterStatus_MSGTYPE VCSEC_UpdaterStatus

#define VCSEC_UpdaterStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    statusCode,        1) \
X(a, STATIC,   SINGULAR, UENUM,    location,          2) \
X(a, STATIC,   SINGULAR, UINT32,   nextAddressNumber,   3)
#define VCSEC_UpdaterStatus_CALLBACK NULL
#define VCSEC_UpdaterStatus_DEFAULT NULL

#define VCSEC_VehicleInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   VIN,               1)
#define VCSEC_VehicleInfo_CALLBACK pb_default_field_callback
#define VCSEC_VehicleInfo_DEFAULT NULL

#define VCSEC_VehicleStatus_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  closureStatuses,   1) \
X(a, STATIC,   SINGULAR, UENUM,    vehicleLockState,   2) \
X(a, STATIC,   SINGULAR, UENUM,    vehicleSleepStatus,   3)
#define VCSEC_VehicleStatus_CALLBACK NULL
#define VCSEC_VehicleStatus_DEFAULT NULL
#define VCSEC_VehicleStatus_closureStatuses_MSGTYPE VCSEC_ClosureStatuses

#define VCSEC_VerifyAndInstallApp_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, BYTES,    sha256,            1) \
X(a, CALLBACK, SINGULAR, BYTES,    rValue,            2) \
X(a, CALLBACK, SINGULAR, BYTES,    sValue,            3)
#define VCSEC_VerifyAndInstallApp_CALLBACK pb_default_field_callback
#define VCSEC_VerifyAndInstallApp_DEFAULT NULL

#define VCSEC_WhitelistEntryInfo_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  keyId,             1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  publicKey,         2) \
X(a, CALLBACK, REPEATED, UENUM,    permissions,       3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  metadataForKey,    4) \
X(a, STATIC,   SINGULAR, UINT32,   secondsEntryRemainsActive,   5) \
X(a, STATIC,   SINGULAR, UINT32,   slot,              6) \
X(a, STATIC,   SINGULAR, UENUM,    keyRole,           7)
#define VCSEC_WhitelistEntryInfo_CALLBACK pb_default_field_callback
#define VCSEC_WhitelistEntryInfo_DEFAULT NULL
#define VCSEC_WhitelistEntryInfo_keyId_MSGTYPE VCSEC_KeyIdentifier
#define VCSEC_WhitelistEntryInfo_publicKey_MSGTYPE VCSEC_PublicKey
#define VCSEC_WhitelistEntryInfo_metadataForKey_MSGTYPE VCSEC_KeyMetadata

#define VCSEC_WhitelistInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   numberOfEntries,   1) \
X(a, STATIC,   REPEATED, MESSAGE,  whitelistEntries,   2) \
X(a, STATIC,   SINGULAR, UINT32,   slotMask,          3)
#define VCSEC_WhitelistInfo_CALLBACK NULL
#define VCSEC_WhitelistInfo_DEFAULT NULL
#define VCSEC_WhitelistInfo_whitelistEntries_MSGTYPE VCSEC_KeyIdentifier

#define VCSEC_WhitelistOperation_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,addPublicKeyToWhitelist,sub_message.addPublicKeyToWhitelist),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,removePublicKeyFromWhitelist,sub_message.removePublicKeyFromWhitelist),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,addPermissionsToPublicKey,sub_message.addPermissionsToPublicKey),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,removePermissionsFromPublicKey,sub_message.removePermissionsFromPublicKey),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,addKeyToWhitelistAndAddPermissions,sub_message.addKeyToWhitelistAndAddPermissions),   5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  metadataForKey,    6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,updateKeyAndPermissions,sub_message.updateKeyAndPermissions),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,addImpermanentKey,sub_message.addImpermanentKey),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,addImpermanentKeyAndRemoveExisting,sub_message.addImpermanentKeyAndRemoveExisting),   9) \
X(a, STATIC,   ONEOF,    BOOL,     (sub_message,removeAllImpermanentKeys,sub_message.removeAllImpermanentKeys),  16) \
X(a, STATIC,   ONEOF,    MESSAGE,  (sub_message,replaceKey,sub_message.replaceKey),  17)
#define VCSEC_WhitelistOperation_CALLBACK NULL
#define VCSEC_WhitelistOperation_DEFAULT NULL
#define VCSEC_WhitelistOperation_sub_message_addPublicKeyToWhitelist_MSGTYPE VCSEC_PublicKey
#define VCSEC_WhitelistOperation_sub_message_removePublicKeyFromWhitelist_MSGTYPE VCSEC_PublicKey
#define VCSEC_WhitelistOperation_sub_message_addPermissionsToPublicKey_MSGTYPE VCSEC_PermissionChange
#define VCSEC_WhitelistOperation_sub_message_removePermissionsFromPublicKey_MSGTYPE VCSEC_PermissionChange
#define VCSEC_WhitelistOperation_sub_message_addKeyToWhitelistAndAddPermissions_MSGTYPE VCSEC_PermissionChange
#define VCSEC_WhitelistOperation_metadataForKey_MSGTYPE VCSEC_KeyMetadata
#define VCSEC_WhitelistOperation_sub_message_updateKeyAndPermissions_MSGTYPE VCSEC_PermissionChange
#define VCSEC_WhitelistOperation_sub_message_addImpermanentKey_MSGTYPE VCSEC_PermissionChange
#define VCSEC_WhitelistOperation_sub_message_addImpermanentKeyAndRemoveExisting_MSGTYPE VCSEC_PermissionChange
#define VCSEC_WhitelistOperation_sub_message_replaceKey_MSGTYPE VCSEC_ReplaceKey

#define VCSEC_WhitelistOperation_status_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    whitelistOperationInformation,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  signerOfOperation,   2) \
X(a, STATIC,   SINGULAR, UENUM,    operationStatus,   3)
#define VCSEC_WhitelistOperation_status_CALLBACK NULL
#define VCSEC_WhitelistOperation_status_DEFAULT NULL
#define VCSEC_WhitelistOperation_status_signerOfOperation_MSGTYPE VCSEC_KeyIdentifier

extern const pb_msgdesc_t VCSEC_AccelData_msg;
extern const pb_msgdesc_t VCSEC_ActiveKey_msg;
extern const pb_msgdesc_t VCSEC_Alert_msg;
extern const pb_msgdesc_t VCSEC_AlertHandlePulledWithoutAuth_msg;
extern const pb_msgdesc_t VCSEC_AppDeviceInfo_msg;
extern const pb_msgdesc_t VCSEC_AuthenticationRequest_msg;
extern const pb_msgdesc_t VCSEC_AuthenticationRequestToken_msg;
extern const pb_msgdesc_t VCSEC_AuthenticationResponse_msg;
extern const pb_msgdesc_t VCSEC_BLEConfig_msg;
extern const pb_msgdesc_t VCSEC_BLEConfigAll_msg;
extern const pb_msgdesc_t VCSEC_BLEConfigCommand_msg;
extern const pb_msgdesc_t VCSEC_Capabilities_msg;
extern const pb_msgdesc_t VCSEC_ClosureMoveRequest_msg;
extern const pb_msgdesc_t VCSEC_ClosureStatuses_msg;
extern const pb_msgdesc_t VCSEC_CodeDescriptor_msg;
extern const pb_msgdesc_t VCSEC_CommandStatus_msg;
extern const pb_msgdesc_t VCSEC_ConnectionMetrics_msg;
extern const pb_msgdesc_t VCSEC_DelaySleepRequest_msg;
extern const pb_msgdesc_t VCSEC_DeviceMotion_msg;
extern const pb_msgdesc_t VCSEC_FromRCI_msg;
extern const pb_msgdesc_t VCSEC_FromVCSECMessage_msg;
extern const pb_msgdesc_t VCSEC_Genealogy_msg;
extern const pb_msgdesc_t VCSEC_GenealogyResponse_msg;
extern const pb_msgdesc_t VCSEC_GetCodeDescriptor_msg;
extern const pb_msgdesc_t VCSEC_GetReaderKey_msg;
extern const pb_msgdesc_t VCSEC_GetSessionInfoRequest_msg;
extern const pb_msgdesc_t VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_msg;
extern const pb_msgdesc_t VCSEC_InformationRequest_msg;
extern const pb_msgdesc_t VCSEC_KeyfobInfo_msg;
extern const pb_msgdesc_t VCSEC_KeyIdentifier_msg;
extern const pb_msgdesc_t VCSEC_KeyIdentity_msg;
extern const pb_msgdesc_t VCSEC_KeyMetadata_msg;
extern const pb_msgdesc_t VCSEC_KeyStatus_msg;
extern const pb_msgdesc_t VCSEC_KeyStatusInfo_msg;
extern const pb_msgdesc_t VCSEC_MIConfigurationData_msg;
extern const pb_msgdesc_t VCSEC_MISessionRequest_msg;
extern const pb_msgdesc_t VCSEC_MISessionResponse_msg;
extern const pb_msgdesc_t VCSEC_MISessionStop_msg;
extern const pb_msgdesc_t VCSEC_MISessionStopped_msg;
extern const pb_msgdesc_t VCSEC_NFCSEState_msg;
extern const pb_msgdesc_t VCSEC_NominalError_msg;
extern const pb_msgdesc_t VCSEC_PermissionChange_msg;
extern const pb_msgdesc_t VCSEC_PersonalizationInformation_msg;
extern const pb_msgdesc_t VCSEC_PublicKey_msg;
extern const pb_msgdesc_t VCSEC_RCISignature_msg;
extern const pb_msgdesc_t VCSEC_ReplaceKey_msg;
extern const pb_msgdesc_t VCSEC_ResetTrackerStats_msg;
extern const pb_msgdesc_t VCSEC_SessionInfo_msg;
extern const pb_msgdesc_t VCSEC_SetTPConfigration_msg;
extern const pb_msgdesc_t VCSEC_SetUpdaterLocation_msg;
extern const pb_msgdesc_t VCSEC_Signatures_msg;
extern const pb_msgdesc_t VCSEC_Signatures_SessionInfo_msg;
extern const pb_msgdesc_t VCSEC_SignedMessage_msg;
extern const pb_msgdesc_t VCSEC_SignedMessage_status_msg;
extern const pb_msgdesc_t VCSEC_SleepManagerRequest_msg;
extern const pb_msgdesc_t VCSEC_SleepManagerStats_msg;
extern const pb_msgdesc_t VCSEC_StageBlock_msg;
extern const pb_msgdesc_t VCSEC_ToRCI_msg;
extern const pb_msgdesc_t VCSEC_ToVCSECMessage_msg;
extern const pb_msgdesc_t VCSEC_TPAdv_msg;
extern const pb_msgdesc_t VCSEC_TPData_msg;
extern const pb_msgdesc_t VCSEC_TPLRDetection_msg;
extern const pb_msgdesc_t VCSEC_TPMotionConfig_msg;
extern const pb_msgdesc_t VCSEC_TPMSAlarms_msg;
extern const pb_msgdesc_t VCSEC_TPNewSensorData_msg;
extern const pb_msgdesc_t VCSEC_TPNotifyTrackerStats_msg;
extern const pb_msgdesc_t VCSEC_TPStationaryConfig_msg;
extern const pb_msgdesc_t VCSEC_TPWheelUnitInfo_msg;
extern const pb_msgdesc_t VCSEC_UnknownKeyInfo_msg;
extern const pb_msgdesc_t VCSEC_UnsecureNotification_msg;
extern const pb_msgdesc_t VCSEC_UnsignedMessage_msg;
extern const pb_msgdesc_t VCSEC_UpdaterCommand_msg;
extern const pb_msgdesc_t VCSEC_UpdaterResponse_msg;
extern const pb_msgdesc_t VCSEC_UpdaterStatus_msg;
extern const pb_msgdesc_t VCSEC_VehicleInfo_msg;
extern const pb_msgdesc_t VCSEC_VehicleStatus_msg;
extern const pb_msgdesc_t VCSEC_VerifyAndInstallApp_msg;
extern const pb_msgdesc_t VCSEC_WhitelistEntryInfo_msg;
extern const pb_msgdesc_t VCSEC_WhitelistInfo_msg;
extern const pb_msgdesc_t VCSEC_WhitelistOperation_msg;
extern const pb_msgdesc_t VCSEC_WhitelistOperation_status_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define VCSEC_AccelData_fields &VCSEC_AccelData_msg
#define VCSEC_ActiveKey_fields &VCSEC_ActiveKey_msg
#define VCSEC_Alert_fields &VCSEC_Alert_msg
#define VCSEC_AlertHandlePulledWithoutAuth_fields &VCSEC_AlertHandlePulledWithoutAuth_msg
#define VCSEC_AppDeviceInfo_fields &VCSEC_AppDeviceInfo_msg
#define VCSEC_AuthenticationRequest_fields &VCSEC_AuthenticationRequest_msg
#define VCSEC_AuthenticationRequestToken_fields &VCSEC_AuthenticationRequestToken_msg
#define VCSEC_AuthenticationResponse_fields &VCSEC_AuthenticationResponse_msg
#define VCSEC_BLEConfig_fields &VCSEC_BLEConfig_msg
#define VCSEC_BLEConfigAll_fields &VCSEC_BLEConfigAll_msg
#define VCSEC_BLEConfigCommand_fields &VCSEC_BLEConfigCommand_msg
#define VCSEC_Capabilities_fields &VCSEC_Capabilities_msg
#define VCSEC_ClosureMoveRequest_fields &VCSEC_ClosureMoveRequest_msg
#define VCSEC_ClosureStatuses_fields &VCSEC_ClosureStatuses_msg
#define VCSEC_CodeDescriptor_fields &VCSEC_CodeDescriptor_msg
#define VCSEC_CommandStatus_fields &VCSEC_CommandStatus_msg
#define VCSEC_ConnectionMetrics_fields &VCSEC_ConnectionMetrics_msg
#define VCSEC_DelaySleepRequest_fields &VCSEC_DelaySleepRequest_msg
#define VCSEC_DeviceMotion_fields &VCSEC_DeviceMotion_msg
#define VCSEC_FromRCI_fields &VCSEC_FromRCI_msg
#define VCSEC_FromVCSECMessage_fields &VCSEC_FromVCSECMessage_msg
#define VCSEC_Genealogy_fields &VCSEC_Genealogy_msg
#define VCSEC_GenealogyResponse_fields &VCSEC_GenealogyResponse_msg
#define VCSEC_GetCodeDescriptor_fields &VCSEC_GetCodeDescriptor_msg
#define VCSEC_GetReaderKey_fields &VCSEC_GetReaderKey_msg
#define VCSEC_GetSessionInfoRequest_fields &VCSEC_GetSessionInfoRequest_msg
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_fields &VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_msg
#define VCSEC_InformationRequest_fields &VCSEC_InformationRequest_msg
#define VCSEC_KeyfobInfo_fields &VCSEC_KeyfobInfo_msg
#define VCSEC_KeyIdentifier_fields &VCSEC_KeyIdentifier_msg
#define VCSEC_KeyIdentity_fields &VCSEC_KeyIdentity_msg
#define VCSEC_KeyMetadata_fields &VCSEC_KeyMetadata_msg
#define VCSEC_KeyStatus_fields &VCSEC_KeyStatus_msg
#define VCSEC_KeyStatusInfo_fields &VCSEC_KeyStatusInfo_msg
#define VCSEC_MIConfigurationData_fields &VCSEC_MIConfigurationData_msg
#define VCSEC_MISessionRequest_fields &VCSEC_MISessionRequest_msg
#define VCSEC_MISessionResponse_fields &VCSEC_MISessionResponse_msg
#define VCSEC_MISessionStop_fields &VCSEC_MISessionStop_msg
#define VCSEC_MISessionStopped_fields &VCSEC_MISessionStopped_msg
#define VCSEC_NFCSEState_fields &VCSEC_NFCSEState_msg
#define VCSEC_NominalError_fields &VCSEC_NominalError_msg
#define VCSEC_PermissionChange_fields &VCSEC_PermissionChange_msg
#define VCSEC_PersonalizationInformation_fields &VCSEC_PersonalizationInformation_msg
#define VCSEC_PublicKey_fields &VCSEC_PublicKey_msg
#define VCSEC_RCISignature_fields &VCSEC_RCISignature_msg
#define VCSEC_ReplaceKey_fields &VCSEC_ReplaceKey_msg
#define VCSEC_ResetTrackerStats_fields &VCSEC_ResetTrackerStats_msg
#define VCSEC_SessionInfo_fields &VCSEC_SessionInfo_msg
#define VCSEC_SetTPConfigration_fields &VCSEC_SetTPConfigration_msg
#define VCSEC_SetUpdaterLocation_fields &VCSEC_SetUpdaterLocation_msg
#define VCSEC_Signatures_fields &VCSEC_Signatures_msg
#define VCSEC_Signatures_SessionInfo_fields &VCSEC_Signatures_SessionInfo_msg
#define VCSEC_SignedMessage_fields &VCSEC_SignedMessage_msg
#define VCSEC_SignedMessage_status_fields &VCSEC_SignedMessage_status_msg
#define VCSEC_SleepManagerRequest_fields &VCSEC_SleepManagerRequest_msg
#define VCSEC_SleepManagerStats_fields &VCSEC_SleepManagerStats_msg
#define VCSEC_StageBlock_fields &VCSEC_StageBlock_msg
#define VCSEC_ToRCI_fields &VCSEC_ToRCI_msg
#define VCSEC_ToVCSECMessage_fields &VCSEC_ToVCSECMessage_msg
#define VCSEC_TPAdv_fields &VCSEC_TPAdv_msg
#define VCSEC_TPData_fields &VCSEC_TPData_msg
#define VCSEC_TPLRDetection_fields &VCSEC_TPLRDetection_msg
#define VCSEC_TPMotionConfig_fields &VCSEC_TPMotionConfig_msg
#define VCSEC_TPMSAlarms_fields &VCSEC_TPMSAlarms_msg
#define VCSEC_TPNewSensorData_fields &VCSEC_TPNewSensorData_msg
#define VCSEC_TPNotifyTrackerStats_fields &VCSEC_TPNotifyTrackerStats_msg
#define VCSEC_TPStationaryConfig_fields &VCSEC_TPStationaryConfig_msg
#define VCSEC_TPWheelUnitInfo_fields &VCSEC_TPWheelUnitInfo_msg
#define VCSEC_UnknownKeyInfo_fields &VCSEC_UnknownKeyInfo_msg
#define VCSEC_UnsecureNotification_fields &VCSEC_UnsecureNotification_msg
#define VCSEC_UnsignedMessage_fields &VCSEC_UnsignedMessage_msg
#define VCSEC_UpdaterCommand_fields &VCSEC_UpdaterCommand_msg
#define VCSEC_UpdaterResponse_fields &VCSEC_UpdaterResponse_msg
#define VCSEC_UpdaterStatus_fields &VCSEC_UpdaterStatus_msg
#define VCSEC_VehicleInfo_fields &VCSEC_VehicleInfo_msg
#define VCSEC_VehicleStatus_fields &VCSEC_VehicleStatus_msg
#define VCSEC_VerifyAndInstallApp_fields &VCSEC_VerifyAndInstallApp_msg
#define VCSEC_WhitelistEntryInfo_fields &VCSEC_WhitelistEntryInfo_msg
#define VCSEC_WhitelistInfo_fields &VCSEC_WhitelistInfo_msg
#define VCSEC_WhitelistOperation_fields &VCSEC_WhitelistOperation_msg
#define VCSEC_WhitelistOperation_status_fields &VCSEC_WhitelistOperation_status_msg

/* Maximum encoded size of messages (where known) */
/* VCSEC_Alert_size depends on runtime parameters */
/* VCSEC_AlertHandlePulledWithoutAuth_size depends on runtime parameters */
/* VCSEC_AppDeviceInfo_size depends on runtime parameters */
/* VCSEC_AuthenticationRequest_size depends on runtime parameters */
/* VCSEC_AuthenticationRequestToken_size depends on runtime parameters */
/* VCSEC_CodeDescriptor_size depends on runtime parameters */
/* VCSEC_DeviceMotion_size depends on runtime parameters */
/* VCSEC_FromRCI_size depends on runtime parameters */
/* VCSEC_FromVCSECMessage_size depends on runtime parameters */
/* VCSEC_Genealogy_size depends on runtime parameters */
/* VCSEC_GenealogyResponse_size depends on runtime parameters */
/* VCSEC_GetSessionInfoRequest_size depends on runtime parameters */
/* VCSEC_InformationRequest_size depends on runtime parameters */
/* VCSEC_KeyfobInfo_size depends on runtime parameters */
/* VCSEC_KeyIdentity_size depends on runtime parameters */
/* VCSEC_KeyStatusInfo_size depends on runtime parameters */
/* VCSEC_MIConfigurationData_size depends on runtime parameters */
/* VCSEC_MISessionRequest_size depends on runtime parameters */
/* VCSEC_MISessionResponse_size depends on runtime parameters */
/* VCSEC_PersonalizationInformation_size depends on runtime parameters */
/* VCSEC_RCISignature_size depends on runtime parameters */
/* VCSEC_SessionInfo_size depends on runtime parameters */
/* VCSEC_Signatures_SessionInfo_size depends on runtime parameters */
/* VCSEC_SignedMessage_size depends on runtime parameters */
/* VCSEC_StageBlock_size depends on runtime parameters */
/* VCSEC_ToRCI_size depends on runtime parameters */
/* VCSEC_ToVCSECMessage_size depends on runtime parameters */
/* VCSEC_TPWheelUnitInfo_size depends on runtime parameters */
/* VCSEC_UnsignedMessage_size depends on runtime parameters */
/* VCSEC_UpdaterCommand_size depends on runtime parameters */
/* VCSEC_UpdaterResponse_size depends on runtime parameters */
/* VCSEC_VehicleInfo_size depends on runtime parameters */
/* VCSEC_VerifyAndInstallApp_size depends on runtime parameters */
/* VCSEC_WhitelistEntryInfo_size depends on runtime parameters */
#define VCSEC_AccelData_size                     22
#define VCSEC_ActiveKey_size                     8
#define VCSEC_AuthenticationResponse_size        10
#define VCSEC_BLEConfigAll_size                  12
#define VCSEC_BLEConfigCommand_size              10
#define VCSEC_BLEConfig_size                     6
#define VCSEC_Capabilities_size                  4
#define VCSEC_ClosureMoveRequest_size            14
#define VCSEC_ClosureStatuses_size               14
#define VCSEC_CommandStatus_size                 16
#define VCSEC_ConnectionMetrics_size             18
#define VCSEC_DelaySleepRequest_size             6
#define VCSEC_GetCodeDescriptor_size             2
#define VCSEC_GetReaderKey_size                  2
#define VCSEC_HandlePulledWithoutAuthDeviceSpecificPayload_size 100
#define VCSEC_KeyIdentifier_size                 6
#define VCSEC_KeyMetadata_size                   2
#define VCSEC_KeyStatus_size                     89
#define VCSEC_MISessionStop_size                 6
#define VCSEC_MISessionStopped_size              6
#define VCSEC_NFCSEState_size                    77
#define VCSEC_NominalError_size                  2
#define VCSEC_PermissionChange_size              97
#define VCSEC_PublicKey_size                     67
#define VCSEC_ReplaceKey_size                    142
#define VCSEC_ResetTrackerStats_size             60
#define VCSEC_SetTPConfigration_size             49
#define VCSEC_SetUpdaterLocation_size            2
#define VCSEC_Signatures_size                    0
#define VCSEC_SignedMessage_status_size          8
#define VCSEC_SleepManagerRequest_size           8
#define VCSEC_SleepManagerStats_size             14
#define VCSEC_TPAdv_size                         33
#define VCSEC_TPData_size                        17
#define VCSEC_TPLRDetection_size                 32
#define VCSEC_TPMSAlarms_size                    12
#define VCSEC_TPMotionConfig_size                14
#define VCSEC_TPNewSensorData_size               69
#define VCSEC_TPNotifyTrackerStats_size          42
#define VCSEC_TPStationaryConfig_size            31
#define VCSEC_UnknownKeyInfo_size                162
#define VCSEC_UnsecureNotification_size          18
#define VCSEC_UpdaterStatus_size                 10
#define VCSEC_VehicleStatus_size                 20
#define VCSEC_WhitelistInfo_size                 172
#define VCSEC_WhitelistOperation_size            150
#define VCSEC_WhitelistOperation_status_size     12

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
